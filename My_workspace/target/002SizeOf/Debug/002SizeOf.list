
002SizeOf.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000010c0  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  08001244  08001244  00002244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800128c  0800128c  0000305c  2**0
                  CONTENTS
  4 .ARM          00000000  0800128c  0800128c  0000305c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800128c  0800128c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800128c  0800128c  0000228c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001290  08001290  00002290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001294  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  080012f0  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  080012f0  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000920  00000000  00000000  00003085  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000030b  00000000  00000000  000039a5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000118  00000000  00000000  00003cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000be  00000000  00000000  00003dc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002b4d  00000000  00000000  00003e86  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000141c  00000000  00000000  000069d3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000976a  00000000  00000000  00007def  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00011559  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b30  00000000  00000000  0001159c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  000120cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	2000005c 	.word	0x2000005c
 80001a0:	00000000 	.word	0x00000000
 80001a4:	0800122c 	.word	0x0800122c

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000060 	.word	0x20000060
 80001c0:	0800122c 	.word	0x0800122c

080001c4 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 80001c4:	b580      	push	{r7, lr}
 80001c6:	af00      	add	r7, sp, #0
	printf("Size of int is %u\n", sizeof(int));
 80001c8:	2104      	movs	r1, #4
 80001ca:	4802      	ldr	r0, [pc, #8]	@ (80001d4 <main+0x10>)
 80001cc:	f000 f9b6 	bl	800053c <iprintf>
	for(;;);
 80001d0:	bf00      	nop
 80001d2:	e7fd      	b.n	80001d0 <main+0xc>
 80001d4:	08001244 	.word	0x08001244

080001d8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	4603      	mov	r3, r0
 80001e0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80001e2:	4b0e      	ldr	r3, [pc, #56]	@ (800021c <ITM_SendChar+0x44>)
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	4a0d      	ldr	r2, [pc, #52]	@ (800021c <ITM_SendChar+0x44>)
 80001e8:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80001ec:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80001ee:	4b0c      	ldr	r3, [pc, #48]	@ (8000220 <ITM_SendChar+0x48>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	4a0b      	ldr	r2, [pc, #44]	@ (8000220 <ITM_SendChar+0x48>)
 80001f4:	f043 0301 	orr.w	r3, r3, #1
 80001f8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80001fa:	bf00      	nop
 80001fc:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f003 0301 	and.w	r3, r3, #1
 8000206:	2b00      	cmp	r3, #0
 8000208:	d0f8      	beq.n	80001fc <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800020a:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 800020e:	79fb      	ldrb	r3, [r7, #7]
 8000210:	6013      	str	r3, [r2, #0]
}
 8000212:	bf00      	nop
 8000214:	370c      	adds	r7, #12
 8000216:	46bd      	mov	sp, r7
 8000218:	bc80      	pop	{r7}
 800021a:	4770      	bx	lr
 800021c:	e000edfc 	.word	0xe000edfc
 8000220:	e0000e00 	.word	0xe0000e00

08000224 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000224:	b580      	push	{r7, lr}
 8000226:	b086      	sub	sp, #24
 8000228:	af00      	add	r7, sp, #0
 800022a:	60f8      	str	r0, [r7, #12]
 800022c:	60b9      	str	r1, [r7, #8]
 800022e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000230:	2300      	movs	r3, #0
 8000232:	617b      	str	r3, [r7, #20]
 8000234:	e00a      	b.n	800024c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000236:	f3af 8000 	nop.w
 800023a:	4601      	mov	r1, r0
 800023c:	68bb      	ldr	r3, [r7, #8]
 800023e:	1c5a      	adds	r2, r3, #1
 8000240:	60ba      	str	r2, [r7, #8]
 8000242:	b2ca      	uxtb	r2, r1
 8000244:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000246:	697b      	ldr	r3, [r7, #20]
 8000248:	3301      	adds	r3, #1
 800024a:	617b      	str	r3, [r7, #20]
 800024c:	697a      	ldr	r2, [r7, #20]
 800024e:	687b      	ldr	r3, [r7, #4]
 8000250:	429a      	cmp	r2, r3
 8000252:	dbf0      	blt.n	8000236 <_read+0x12>
  }

  return len;
 8000254:	687b      	ldr	r3, [r7, #4]
}
 8000256:	4618      	mov	r0, r3
 8000258:	3718      	adds	r7, #24
 800025a:	46bd      	mov	sp, r7
 800025c:	bd80      	pop	{r7, pc}

0800025e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800025e:	b580      	push	{r7, lr}
 8000260:	b086      	sub	sp, #24
 8000262:	af00      	add	r7, sp, #0
 8000264:	60f8      	str	r0, [r7, #12]
 8000266:	60b9      	str	r1, [r7, #8]
 8000268:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800026a:	2300      	movs	r3, #0
 800026c:	617b      	str	r3, [r7, #20]
 800026e:	e009      	b.n	8000284 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000270:	68bb      	ldr	r3, [r7, #8]
 8000272:	1c5a      	adds	r2, r3, #1
 8000274:	60ba      	str	r2, [r7, #8]
 8000276:	781b      	ldrb	r3, [r3, #0]
 8000278:	4618      	mov	r0, r3
 800027a:	f7ff ffad 	bl	80001d8 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800027e:	697b      	ldr	r3, [r7, #20]
 8000280:	3301      	adds	r3, #1
 8000282:	617b      	str	r3, [r7, #20]
 8000284:	697a      	ldr	r2, [r7, #20]
 8000286:	687b      	ldr	r3, [r7, #4]
 8000288:	429a      	cmp	r2, r3
 800028a:	dbf1      	blt.n	8000270 <_write+0x12>
  }
  return len;
 800028c:	687b      	ldr	r3, [r7, #4]
}
 800028e:	4618      	mov	r0, r3
 8000290:	3718      	adds	r7, #24
 8000292:	46bd      	mov	sp, r7
 8000294:	bd80      	pop	{r7, pc}

08000296 <_close>:

int _close(int file)
{
 8000296:	b480      	push	{r7}
 8000298:	b083      	sub	sp, #12
 800029a:	af00      	add	r7, sp, #0
 800029c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800029e:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002a2:	4618      	mov	r0, r3
 80002a4:	370c      	adds	r7, #12
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bc80      	pop	{r7}
 80002aa:	4770      	bx	lr

080002ac <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002ac:	b480      	push	{r7}
 80002ae:	b083      	sub	sp, #12
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
 80002b4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80002b6:	683b      	ldr	r3, [r7, #0]
 80002b8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80002bc:	605a      	str	r2, [r3, #4]
  return 0;
 80002be:	2300      	movs	r3, #0
}
 80002c0:	4618      	mov	r0, r3
 80002c2:	370c      	adds	r7, #12
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bc80      	pop	{r7}
 80002c8:	4770      	bx	lr

080002ca <_isatty>:

int _isatty(int file)
{
 80002ca:	b480      	push	{r7}
 80002cc:	b083      	sub	sp, #12
 80002ce:	af00      	add	r7, sp, #0
 80002d0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002d2:	2301      	movs	r3, #1
}
 80002d4:	4618      	mov	r0, r3
 80002d6:	370c      	adds	r7, #12
 80002d8:	46bd      	mov	sp, r7
 80002da:	bc80      	pop	{r7}
 80002dc:	4770      	bx	lr

080002de <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002de:	b480      	push	{r7}
 80002e0:	b085      	sub	sp, #20
 80002e2:	af00      	add	r7, sp, #0
 80002e4:	60f8      	str	r0, [r7, #12]
 80002e6:	60b9      	str	r1, [r7, #8]
 80002e8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002ea:	2300      	movs	r3, #0
}
 80002ec:	4618      	mov	r0, r3
 80002ee:	3714      	adds	r7, #20
 80002f0:	46bd      	mov	sp, r7
 80002f2:	bc80      	pop	{r7}
 80002f4:	4770      	bx	lr
	...

080002f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b086      	sub	sp, #24
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000300:	4a14      	ldr	r2, [pc, #80]	@ (8000354 <_sbrk+0x5c>)
 8000302:	4b15      	ldr	r3, [pc, #84]	@ (8000358 <_sbrk+0x60>)
 8000304:	1ad3      	subs	r3, r2, r3
 8000306:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000308:	697b      	ldr	r3, [r7, #20]
 800030a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800030c:	4b13      	ldr	r3, [pc, #76]	@ (800035c <_sbrk+0x64>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	2b00      	cmp	r3, #0
 8000312:	d102      	bne.n	800031a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000314:	4b11      	ldr	r3, [pc, #68]	@ (800035c <_sbrk+0x64>)
 8000316:	4a12      	ldr	r2, [pc, #72]	@ (8000360 <_sbrk+0x68>)
 8000318:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800031a:	4b10      	ldr	r3, [pc, #64]	@ (800035c <_sbrk+0x64>)
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4413      	add	r3, r2
 8000322:	693a      	ldr	r2, [r7, #16]
 8000324:	429a      	cmp	r2, r3
 8000326:	d207      	bcs.n	8000338 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000328:	f000 f9ac 	bl	8000684 <__errno>
 800032c:	4603      	mov	r3, r0
 800032e:	220c      	movs	r2, #12
 8000330:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000332:	f04f 33ff 	mov.w	r3, #4294967295
 8000336:	e009      	b.n	800034c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000338:	4b08      	ldr	r3, [pc, #32]	@ (800035c <_sbrk+0x64>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800033e:	4b07      	ldr	r3, [pc, #28]	@ (800035c <_sbrk+0x64>)
 8000340:	681a      	ldr	r2, [r3, #0]
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4413      	add	r3, r2
 8000346:	4a05      	ldr	r2, [pc, #20]	@ (800035c <_sbrk+0x64>)
 8000348:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800034a:	68fb      	ldr	r3, [r7, #12]
}
 800034c:	4618      	mov	r0, r3
 800034e:	3718      	adds	r7, #24
 8000350:	46bd      	mov	sp, r7
 8000352:	bd80      	pop	{r7, pc}
 8000354:	20020000 	.word	0x20020000
 8000358:	00000400 	.word	0x00000400
 800035c:	20000078 	.word	0x20000078
 8000360:	200001c8 	.word	0x200001c8

08000364 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000364:	480d      	ldr	r0, [pc, #52]	@ (800039c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000366:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000368:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800036c:	480c      	ldr	r0, [pc, #48]	@ (80003a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800036e:	490d      	ldr	r1, [pc, #52]	@ (80003a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000370:	4a0d      	ldr	r2, [pc, #52]	@ (80003a8 <LoopForever+0xe>)
  movs r3, #0
 8000372:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000374:	e002      	b.n	800037c <LoopCopyDataInit>

08000376 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000376:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000378:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800037a:	3304      	adds	r3, #4

0800037c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800037c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800037e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000380:	d3f9      	bcc.n	8000376 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000382:	4a0a      	ldr	r2, [pc, #40]	@ (80003ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000384:	4c0a      	ldr	r4, [pc, #40]	@ (80003b0 <LoopForever+0x16>)
  movs r3, #0
 8000386:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000388:	e001      	b.n	800038e <LoopFillZerobss>

0800038a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800038a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800038c:	3204      	adds	r2, #4

0800038e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800038e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000390:	d3fb      	bcc.n	800038a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000392:	f000 f97d 	bl	8000690 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000396:	f7ff ff15 	bl	80001c4 <main>

0800039a <LoopForever>:

LoopForever:
  b LoopForever
 800039a:	e7fe      	b.n	800039a <LoopForever>
  ldr   r0, =_estack
 800039c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003a4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80003a8:	08001294 	.word	0x08001294
  ldr r2, =_sbss
 80003ac:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003b0:	200001c8 	.word	0x200001c8

080003b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003b4:	e7fe      	b.n	80003b4 <ADC_IRQHandler>
	...

080003b8 <std>:
 80003b8:	2300      	movs	r3, #0
 80003ba:	b510      	push	{r4, lr}
 80003bc:	4604      	mov	r4, r0
 80003be:	e9c0 3300 	strd	r3, r3, [r0]
 80003c2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003c6:	6083      	str	r3, [r0, #8]
 80003c8:	8181      	strh	r1, [r0, #12]
 80003ca:	6643      	str	r3, [r0, #100]	@ 0x64
 80003cc:	81c2      	strh	r2, [r0, #14]
 80003ce:	6183      	str	r3, [r0, #24]
 80003d0:	4619      	mov	r1, r3
 80003d2:	2208      	movs	r2, #8
 80003d4:	305c      	adds	r0, #92	@ 0x5c
 80003d6:	f000 f906 	bl	80005e6 <memset>
 80003da:	4b0d      	ldr	r3, [pc, #52]	@ (8000410 <std+0x58>)
 80003dc:	6224      	str	r4, [r4, #32]
 80003de:	6263      	str	r3, [r4, #36]	@ 0x24
 80003e0:	4b0c      	ldr	r3, [pc, #48]	@ (8000414 <std+0x5c>)
 80003e2:	62a3      	str	r3, [r4, #40]	@ 0x28
 80003e4:	4b0c      	ldr	r3, [pc, #48]	@ (8000418 <std+0x60>)
 80003e6:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80003e8:	4b0c      	ldr	r3, [pc, #48]	@ (800041c <std+0x64>)
 80003ea:	6323      	str	r3, [r4, #48]	@ 0x30
 80003ec:	4b0c      	ldr	r3, [pc, #48]	@ (8000420 <std+0x68>)
 80003ee:	429c      	cmp	r4, r3
 80003f0:	d006      	beq.n	8000400 <std+0x48>
 80003f2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80003f6:	4294      	cmp	r4, r2
 80003f8:	d002      	beq.n	8000400 <std+0x48>
 80003fa:	33d0      	adds	r3, #208	@ 0xd0
 80003fc:	429c      	cmp	r4, r3
 80003fe:	d105      	bne.n	800040c <std+0x54>
 8000400:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000404:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000408:	f000 b966 	b.w	80006d8 <__retarget_lock_init_recursive>
 800040c:	bd10      	pop	{r4, pc}
 800040e:	bf00      	nop
 8000410:	08000561 	.word	0x08000561
 8000414:	08000583 	.word	0x08000583
 8000418:	080005bb 	.word	0x080005bb
 800041c:	080005df 	.word	0x080005df
 8000420:	2000007c 	.word	0x2000007c

08000424 <stdio_exit_handler>:
 8000424:	4a02      	ldr	r2, [pc, #8]	@ (8000430 <stdio_exit_handler+0xc>)
 8000426:	4903      	ldr	r1, [pc, #12]	@ (8000434 <stdio_exit_handler+0x10>)
 8000428:	4803      	ldr	r0, [pc, #12]	@ (8000438 <stdio_exit_handler+0x14>)
 800042a:	f000 b869 	b.w	8000500 <_fwalk_sglue>
 800042e:	bf00      	nop
 8000430:	20000000 	.word	0x20000000
 8000434:	08000f71 	.word	0x08000f71
 8000438:	20000010 	.word	0x20000010

0800043c <cleanup_stdio>:
 800043c:	6841      	ldr	r1, [r0, #4]
 800043e:	4b0c      	ldr	r3, [pc, #48]	@ (8000470 <cleanup_stdio+0x34>)
 8000440:	b510      	push	{r4, lr}
 8000442:	4299      	cmp	r1, r3
 8000444:	4604      	mov	r4, r0
 8000446:	d001      	beq.n	800044c <cleanup_stdio+0x10>
 8000448:	f000 fd92 	bl	8000f70 <_fflush_r>
 800044c:	68a1      	ldr	r1, [r4, #8]
 800044e:	4b09      	ldr	r3, [pc, #36]	@ (8000474 <cleanup_stdio+0x38>)
 8000450:	4299      	cmp	r1, r3
 8000452:	d002      	beq.n	800045a <cleanup_stdio+0x1e>
 8000454:	4620      	mov	r0, r4
 8000456:	f000 fd8b 	bl	8000f70 <_fflush_r>
 800045a:	68e1      	ldr	r1, [r4, #12]
 800045c:	4b06      	ldr	r3, [pc, #24]	@ (8000478 <cleanup_stdio+0x3c>)
 800045e:	4299      	cmp	r1, r3
 8000460:	d004      	beq.n	800046c <cleanup_stdio+0x30>
 8000462:	4620      	mov	r0, r4
 8000464:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000468:	f000 bd82 	b.w	8000f70 <_fflush_r>
 800046c:	bd10      	pop	{r4, pc}
 800046e:	bf00      	nop
 8000470:	2000007c 	.word	0x2000007c
 8000474:	200000e4 	.word	0x200000e4
 8000478:	2000014c 	.word	0x2000014c

0800047c <global_stdio_init.part.0>:
 800047c:	b510      	push	{r4, lr}
 800047e:	4b0b      	ldr	r3, [pc, #44]	@ (80004ac <global_stdio_init.part.0+0x30>)
 8000480:	4c0b      	ldr	r4, [pc, #44]	@ (80004b0 <global_stdio_init.part.0+0x34>)
 8000482:	4a0c      	ldr	r2, [pc, #48]	@ (80004b4 <global_stdio_init.part.0+0x38>)
 8000484:	4620      	mov	r0, r4
 8000486:	601a      	str	r2, [r3, #0]
 8000488:	2104      	movs	r1, #4
 800048a:	2200      	movs	r2, #0
 800048c:	f7ff ff94 	bl	80003b8 <std>
 8000490:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000494:	2201      	movs	r2, #1
 8000496:	2109      	movs	r1, #9
 8000498:	f7ff ff8e 	bl	80003b8 <std>
 800049c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80004a0:	2202      	movs	r2, #2
 80004a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a6:	2112      	movs	r1, #18
 80004a8:	f7ff bf86 	b.w	80003b8 <std>
 80004ac:	200001b4 	.word	0x200001b4
 80004b0:	2000007c 	.word	0x2000007c
 80004b4:	08000425 	.word	0x08000425

080004b8 <__sfp_lock_acquire>:
 80004b8:	4801      	ldr	r0, [pc, #4]	@ (80004c0 <__sfp_lock_acquire+0x8>)
 80004ba:	f000 b90e 	b.w	80006da <__retarget_lock_acquire_recursive>
 80004be:	bf00      	nop
 80004c0:	200001bd 	.word	0x200001bd

080004c4 <__sfp_lock_release>:
 80004c4:	4801      	ldr	r0, [pc, #4]	@ (80004cc <__sfp_lock_release+0x8>)
 80004c6:	f000 b909 	b.w	80006dc <__retarget_lock_release_recursive>
 80004ca:	bf00      	nop
 80004cc:	200001bd 	.word	0x200001bd

080004d0 <__sinit>:
 80004d0:	b510      	push	{r4, lr}
 80004d2:	4604      	mov	r4, r0
 80004d4:	f7ff fff0 	bl	80004b8 <__sfp_lock_acquire>
 80004d8:	6a23      	ldr	r3, [r4, #32]
 80004da:	b11b      	cbz	r3, 80004e4 <__sinit+0x14>
 80004dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004e0:	f7ff bff0 	b.w	80004c4 <__sfp_lock_release>
 80004e4:	4b04      	ldr	r3, [pc, #16]	@ (80004f8 <__sinit+0x28>)
 80004e6:	6223      	str	r3, [r4, #32]
 80004e8:	4b04      	ldr	r3, [pc, #16]	@ (80004fc <__sinit+0x2c>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	2b00      	cmp	r3, #0
 80004ee:	d1f5      	bne.n	80004dc <__sinit+0xc>
 80004f0:	f7ff ffc4 	bl	800047c <global_stdio_init.part.0>
 80004f4:	e7f2      	b.n	80004dc <__sinit+0xc>
 80004f6:	bf00      	nop
 80004f8:	0800043d 	.word	0x0800043d
 80004fc:	200001b4 	.word	0x200001b4

08000500 <_fwalk_sglue>:
 8000500:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000504:	4607      	mov	r7, r0
 8000506:	4688      	mov	r8, r1
 8000508:	4614      	mov	r4, r2
 800050a:	2600      	movs	r6, #0
 800050c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000510:	f1b9 0901 	subs.w	r9, r9, #1
 8000514:	d505      	bpl.n	8000522 <_fwalk_sglue+0x22>
 8000516:	6824      	ldr	r4, [r4, #0]
 8000518:	2c00      	cmp	r4, #0
 800051a:	d1f7      	bne.n	800050c <_fwalk_sglue+0xc>
 800051c:	4630      	mov	r0, r6
 800051e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000522:	89ab      	ldrh	r3, [r5, #12]
 8000524:	2b01      	cmp	r3, #1
 8000526:	d907      	bls.n	8000538 <_fwalk_sglue+0x38>
 8000528:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800052c:	3301      	adds	r3, #1
 800052e:	d003      	beq.n	8000538 <_fwalk_sglue+0x38>
 8000530:	4629      	mov	r1, r5
 8000532:	4638      	mov	r0, r7
 8000534:	47c0      	blx	r8
 8000536:	4306      	orrs	r6, r0
 8000538:	3568      	adds	r5, #104	@ 0x68
 800053a:	e7e9      	b.n	8000510 <_fwalk_sglue+0x10>

0800053c <iprintf>:
 800053c:	b40f      	push	{r0, r1, r2, r3}
 800053e:	b507      	push	{r0, r1, r2, lr}
 8000540:	4906      	ldr	r1, [pc, #24]	@ (800055c <iprintf+0x20>)
 8000542:	ab04      	add	r3, sp, #16
 8000544:	6808      	ldr	r0, [r1, #0]
 8000546:	f853 2b04 	ldr.w	r2, [r3], #4
 800054a:	6881      	ldr	r1, [r0, #8]
 800054c:	9301      	str	r3, [sp, #4]
 800054e:	f000 f9e5 	bl	800091c <_vfiprintf_r>
 8000552:	b003      	add	sp, #12
 8000554:	f85d eb04 	ldr.w	lr, [sp], #4
 8000558:	b004      	add	sp, #16
 800055a:	4770      	bx	lr
 800055c:	2000000c 	.word	0x2000000c

08000560 <__sread>:
 8000560:	b510      	push	{r4, lr}
 8000562:	460c      	mov	r4, r1
 8000564:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000568:	f000 f868 	bl	800063c <_read_r>
 800056c:	2800      	cmp	r0, #0
 800056e:	bfab      	itete	ge
 8000570:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000572:	89a3      	ldrhlt	r3, [r4, #12]
 8000574:	181b      	addge	r3, r3, r0
 8000576:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800057a:	bfac      	ite	ge
 800057c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800057e:	81a3      	strhlt	r3, [r4, #12]
 8000580:	bd10      	pop	{r4, pc}

08000582 <__swrite>:
 8000582:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000586:	461f      	mov	r7, r3
 8000588:	898b      	ldrh	r3, [r1, #12]
 800058a:	4605      	mov	r5, r0
 800058c:	05db      	lsls	r3, r3, #23
 800058e:	460c      	mov	r4, r1
 8000590:	4616      	mov	r6, r2
 8000592:	d505      	bpl.n	80005a0 <__swrite+0x1e>
 8000594:	2302      	movs	r3, #2
 8000596:	2200      	movs	r2, #0
 8000598:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800059c:	f000 f83c 	bl	8000618 <_lseek_r>
 80005a0:	89a3      	ldrh	r3, [r4, #12]
 80005a2:	4632      	mov	r2, r6
 80005a4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80005a8:	81a3      	strh	r3, [r4, #12]
 80005aa:	4628      	mov	r0, r5
 80005ac:	463b      	mov	r3, r7
 80005ae:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80005b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80005b6:	f000 b853 	b.w	8000660 <_write_r>

080005ba <__sseek>:
 80005ba:	b510      	push	{r4, lr}
 80005bc:	460c      	mov	r4, r1
 80005be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005c2:	f000 f829 	bl	8000618 <_lseek_r>
 80005c6:	1c43      	adds	r3, r0, #1
 80005c8:	89a3      	ldrh	r3, [r4, #12]
 80005ca:	bf15      	itete	ne
 80005cc:	6560      	strne	r0, [r4, #84]	@ 0x54
 80005ce:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80005d2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80005d6:	81a3      	strheq	r3, [r4, #12]
 80005d8:	bf18      	it	ne
 80005da:	81a3      	strhne	r3, [r4, #12]
 80005dc:	bd10      	pop	{r4, pc}

080005de <__sclose>:
 80005de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005e2:	f000 b809 	b.w	80005f8 <_close_r>

080005e6 <memset>:
 80005e6:	4603      	mov	r3, r0
 80005e8:	4402      	add	r2, r0
 80005ea:	4293      	cmp	r3, r2
 80005ec:	d100      	bne.n	80005f0 <memset+0xa>
 80005ee:	4770      	bx	lr
 80005f0:	f803 1b01 	strb.w	r1, [r3], #1
 80005f4:	e7f9      	b.n	80005ea <memset+0x4>
	...

080005f8 <_close_r>:
 80005f8:	b538      	push	{r3, r4, r5, lr}
 80005fa:	2300      	movs	r3, #0
 80005fc:	4d05      	ldr	r5, [pc, #20]	@ (8000614 <_close_r+0x1c>)
 80005fe:	4604      	mov	r4, r0
 8000600:	4608      	mov	r0, r1
 8000602:	602b      	str	r3, [r5, #0]
 8000604:	f7ff fe47 	bl	8000296 <_close>
 8000608:	1c43      	adds	r3, r0, #1
 800060a:	d102      	bne.n	8000612 <_close_r+0x1a>
 800060c:	682b      	ldr	r3, [r5, #0]
 800060e:	b103      	cbz	r3, 8000612 <_close_r+0x1a>
 8000610:	6023      	str	r3, [r4, #0]
 8000612:	bd38      	pop	{r3, r4, r5, pc}
 8000614:	200001b8 	.word	0x200001b8

08000618 <_lseek_r>:
 8000618:	b538      	push	{r3, r4, r5, lr}
 800061a:	4604      	mov	r4, r0
 800061c:	4608      	mov	r0, r1
 800061e:	4611      	mov	r1, r2
 8000620:	2200      	movs	r2, #0
 8000622:	4d05      	ldr	r5, [pc, #20]	@ (8000638 <_lseek_r+0x20>)
 8000624:	602a      	str	r2, [r5, #0]
 8000626:	461a      	mov	r2, r3
 8000628:	f7ff fe59 	bl	80002de <_lseek>
 800062c:	1c43      	adds	r3, r0, #1
 800062e:	d102      	bne.n	8000636 <_lseek_r+0x1e>
 8000630:	682b      	ldr	r3, [r5, #0]
 8000632:	b103      	cbz	r3, 8000636 <_lseek_r+0x1e>
 8000634:	6023      	str	r3, [r4, #0]
 8000636:	bd38      	pop	{r3, r4, r5, pc}
 8000638:	200001b8 	.word	0x200001b8

0800063c <_read_r>:
 800063c:	b538      	push	{r3, r4, r5, lr}
 800063e:	4604      	mov	r4, r0
 8000640:	4608      	mov	r0, r1
 8000642:	4611      	mov	r1, r2
 8000644:	2200      	movs	r2, #0
 8000646:	4d05      	ldr	r5, [pc, #20]	@ (800065c <_read_r+0x20>)
 8000648:	602a      	str	r2, [r5, #0]
 800064a:	461a      	mov	r2, r3
 800064c:	f7ff fdea 	bl	8000224 <_read>
 8000650:	1c43      	adds	r3, r0, #1
 8000652:	d102      	bne.n	800065a <_read_r+0x1e>
 8000654:	682b      	ldr	r3, [r5, #0]
 8000656:	b103      	cbz	r3, 800065a <_read_r+0x1e>
 8000658:	6023      	str	r3, [r4, #0]
 800065a:	bd38      	pop	{r3, r4, r5, pc}
 800065c:	200001b8 	.word	0x200001b8

08000660 <_write_r>:
 8000660:	b538      	push	{r3, r4, r5, lr}
 8000662:	4604      	mov	r4, r0
 8000664:	4608      	mov	r0, r1
 8000666:	4611      	mov	r1, r2
 8000668:	2200      	movs	r2, #0
 800066a:	4d05      	ldr	r5, [pc, #20]	@ (8000680 <_write_r+0x20>)
 800066c:	602a      	str	r2, [r5, #0]
 800066e:	461a      	mov	r2, r3
 8000670:	f7ff fdf5 	bl	800025e <_write>
 8000674:	1c43      	adds	r3, r0, #1
 8000676:	d102      	bne.n	800067e <_write_r+0x1e>
 8000678:	682b      	ldr	r3, [r5, #0]
 800067a:	b103      	cbz	r3, 800067e <_write_r+0x1e>
 800067c:	6023      	str	r3, [r4, #0]
 800067e:	bd38      	pop	{r3, r4, r5, pc}
 8000680:	200001b8 	.word	0x200001b8

08000684 <__errno>:
 8000684:	4b01      	ldr	r3, [pc, #4]	@ (800068c <__errno+0x8>)
 8000686:	6818      	ldr	r0, [r3, #0]
 8000688:	4770      	bx	lr
 800068a:	bf00      	nop
 800068c:	2000000c 	.word	0x2000000c

08000690 <__libc_init_array>:
 8000690:	b570      	push	{r4, r5, r6, lr}
 8000692:	2600      	movs	r6, #0
 8000694:	4d0c      	ldr	r5, [pc, #48]	@ (80006c8 <__libc_init_array+0x38>)
 8000696:	4c0d      	ldr	r4, [pc, #52]	@ (80006cc <__libc_init_array+0x3c>)
 8000698:	1b64      	subs	r4, r4, r5
 800069a:	10a4      	asrs	r4, r4, #2
 800069c:	42a6      	cmp	r6, r4
 800069e:	d109      	bne.n	80006b4 <__libc_init_array+0x24>
 80006a0:	f000 fdc4 	bl	800122c <_init>
 80006a4:	2600      	movs	r6, #0
 80006a6:	4d0a      	ldr	r5, [pc, #40]	@ (80006d0 <__libc_init_array+0x40>)
 80006a8:	4c0a      	ldr	r4, [pc, #40]	@ (80006d4 <__libc_init_array+0x44>)
 80006aa:	1b64      	subs	r4, r4, r5
 80006ac:	10a4      	asrs	r4, r4, #2
 80006ae:	42a6      	cmp	r6, r4
 80006b0:	d105      	bne.n	80006be <__libc_init_array+0x2e>
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80006b8:	4798      	blx	r3
 80006ba:	3601      	adds	r6, #1
 80006bc:	e7ee      	b.n	800069c <__libc_init_array+0xc>
 80006be:	f855 3b04 	ldr.w	r3, [r5], #4
 80006c2:	4798      	blx	r3
 80006c4:	3601      	adds	r6, #1
 80006c6:	e7f2      	b.n	80006ae <__libc_init_array+0x1e>
 80006c8:	0800128c 	.word	0x0800128c
 80006cc:	0800128c 	.word	0x0800128c
 80006d0:	0800128c 	.word	0x0800128c
 80006d4:	08001290 	.word	0x08001290

080006d8 <__retarget_lock_init_recursive>:
 80006d8:	4770      	bx	lr

080006da <__retarget_lock_acquire_recursive>:
 80006da:	4770      	bx	lr

080006dc <__retarget_lock_release_recursive>:
 80006dc:	4770      	bx	lr
	...

080006e0 <_free_r>:
 80006e0:	b538      	push	{r3, r4, r5, lr}
 80006e2:	4605      	mov	r5, r0
 80006e4:	2900      	cmp	r1, #0
 80006e6:	d040      	beq.n	800076a <_free_r+0x8a>
 80006e8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80006ec:	1f0c      	subs	r4, r1, #4
 80006ee:	2b00      	cmp	r3, #0
 80006f0:	bfb8      	it	lt
 80006f2:	18e4      	addlt	r4, r4, r3
 80006f4:	f000 f8de 	bl	80008b4 <__malloc_lock>
 80006f8:	4a1c      	ldr	r2, [pc, #112]	@ (800076c <_free_r+0x8c>)
 80006fa:	6813      	ldr	r3, [r2, #0]
 80006fc:	b933      	cbnz	r3, 800070c <_free_r+0x2c>
 80006fe:	6063      	str	r3, [r4, #4]
 8000700:	6014      	str	r4, [r2, #0]
 8000702:	4628      	mov	r0, r5
 8000704:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000708:	f000 b8da 	b.w	80008c0 <__malloc_unlock>
 800070c:	42a3      	cmp	r3, r4
 800070e:	d908      	bls.n	8000722 <_free_r+0x42>
 8000710:	6820      	ldr	r0, [r4, #0]
 8000712:	1821      	adds	r1, r4, r0
 8000714:	428b      	cmp	r3, r1
 8000716:	bf01      	itttt	eq
 8000718:	6819      	ldreq	r1, [r3, #0]
 800071a:	685b      	ldreq	r3, [r3, #4]
 800071c:	1809      	addeq	r1, r1, r0
 800071e:	6021      	streq	r1, [r4, #0]
 8000720:	e7ed      	b.n	80006fe <_free_r+0x1e>
 8000722:	461a      	mov	r2, r3
 8000724:	685b      	ldr	r3, [r3, #4]
 8000726:	b10b      	cbz	r3, 800072c <_free_r+0x4c>
 8000728:	42a3      	cmp	r3, r4
 800072a:	d9fa      	bls.n	8000722 <_free_r+0x42>
 800072c:	6811      	ldr	r1, [r2, #0]
 800072e:	1850      	adds	r0, r2, r1
 8000730:	42a0      	cmp	r0, r4
 8000732:	d10b      	bne.n	800074c <_free_r+0x6c>
 8000734:	6820      	ldr	r0, [r4, #0]
 8000736:	4401      	add	r1, r0
 8000738:	1850      	adds	r0, r2, r1
 800073a:	4283      	cmp	r3, r0
 800073c:	6011      	str	r1, [r2, #0]
 800073e:	d1e0      	bne.n	8000702 <_free_r+0x22>
 8000740:	6818      	ldr	r0, [r3, #0]
 8000742:	685b      	ldr	r3, [r3, #4]
 8000744:	4408      	add	r0, r1
 8000746:	6010      	str	r0, [r2, #0]
 8000748:	6053      	str	r3, [r2, #4]
 800074a:	e7da      	b.n	8000702 <_free_r+0x22>
 800074c:	d902      	bls.n	8000754 <_free_r+0x74>
 800074e:	230c      	movs	r3, #12
 8000750:	602b      	str	r3, [r5, #0]
 8000752:	e7d6      	b.n	8000702 <_free_r+0x22>
 8000754:	6820      	ldr	r0, [r4, #0]
 8000756:	1821      	adds	r1, r4, r0
 8000758:	428b      	cmp	r3, r1
 800075a:	bf01      	itttt	eq
 800075c:	6819      	ldreq	r1, [r3, #0]
 800075e:	685b      	ldreq	r3, [r3, #4]
 8000760:	1809      	addeq	r1, r1, r0
 8000762:	6021      	streq	r1, [r4, #0]
 8000764:	6063      	str	r3, [r4, #4]
 8000766:	6054      	str	r4, [r2, #4]
 8000768:	e7cb      	b.n	8000702 <_free_r+0x22>
 800076a:	bd38      	pop	{r3, r4, r5, pc}
 800076c:	200001c4 	.word	0x200001c4

08000770 <sbrk_aligned>:
 8000770:	b570      	push	{r4, r5, r6, lr}
 8000772:	4e0f      	ldr	r6, [pc, #60]	@ (80007b0 <sbrk_aligned+0x40>)
 8000774:	460c      	mov	r4, r1
 8000776:	6831      	ldr	r1, [r6, #0]
 8000778:	4605      	mov	r5, r0
 800077a:	b911      	cbnz	r1, 8000782 <sbrk_aligned+0x12>
 800077c:	f000 fcb4 	bl	80010e8 <_sbrk_r>
 8000780:	6030      	str	r0, [r6, #0]
 8000782:	4621      	mov	r1, r4
 8000784:	4628      	mov	r0, r5
 8000786:	f000 fcaf 	bl	80010e8 <_sbrk_r>
 800078a:	1c43      	adds	r3, r0, #1
 800078c:	d103      	bne.n	8000796 <sbrk_aligned+0x26>
 800078e:	f04f 34ff 	mov.w	r4, #4294967295
 8000792:	4620      	mov	r0, r4
 8000794:	bd70      	pop	{r4, r5, r6, pc}
 8000796:	1cc4      	adds	r4, r0, #3
 8000798:	f024 0403 	bic.w	r4, r4, #3
 800079c:	42a0      	cmp	r0, r4
 800079e:	d0f8      	beq.n	8000792 <sbrk_aligned+0x22>
 80007a0:	1a21      	subs	r1, r4, r0
 80007a2:	4628      	mov	r0, r5
 80007a4:	f000 fca0 	bl	80010e8 <_sbrk_r>
 80007a8:	3001      	adds	r0, #1
 80007aa:	d1f2      	bne.n	8000792 <sbrk_aligned+0x22>
 80007ac:	e7ef      	b.n	800078e <sbrk_aligned+0x1e>
 80007ae:	bf00      	nop
 80007b0:	200001c0 	.word	0x200001c0

080007b4 <_malloc_r>:
 80007b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007b8:	1ccd      	adds	r5, r1, #3
 80007ba:	f025 0503 	bic.w	r5, r5, #3
 80007be:	3508      	adds	r5, #8
 80007c0:	2d0c      	cmp	r5, #12
 80007c2:	bf38      	it	cc
 80007c4:	250c      	movcc	r5, #12
 80007c6:	2d00      	cmp	r5, #0
 80007c8:	4606      	mov	r6, r0
 80007ca:	db01      	blt.n	80007d0 <_malloc_r+0x1c>
 80007cc:	42a9      	cmp	r1, r5
 80007ce:	d904      	bls.n	80007da <_malloc_r+0x26>
 80007d0:	230c      	movs	r3, #12
 80007d2:	6033      	str	r3, [r6, #0]
 80007d4:	2000      	movs	r0, #0
 80007d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007da:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80008b0 <_malloc_r+0xfc>
 80007de:	f000 f869 	bl	80008b4 <__malloc_lock>
 80007e2:	f8d8 3000 	ldr.w	r3, [r8]
 80007e6:	461c      	mov	r4, r3
 80007e8:	bb44      	cbnz	r4, 800083c <_malloc_r+0x88>
 80007ea:	4629      	mov	r1, r5
 80007ec:	4630      	mov	r0, r6
 80007ee:	f7ff ffbf 	bl	8000770 <sbrk_aligned>
 80007f2:	1c43      	adds	r3, r0, #1
 80007f4:	4604      	mov	r4, r0
 80007f6:	d158      	bne.n	80008aa <_malloc_r+0xf6>
 80007f8:	f8d8 4000 	ldr.w	r4, [r8]
 80007fc:	4627      	mov	r7, r4
 80007fe:	2f00      	cmp	r7, #0
 8000800:	d143      	bne.n	800088a <_malloc_r+0xd6>
 8000802:	2c00      	cmp	r4, #0
 8000804:	d04b      	beq.n	800089e <_malloc_r+0xea>
 8000806:	6823      	ldr	r3, [r4, #0]
 8000808:	4639      	mov	r1, r7
 800080a:	4630      	mov	r0, r6
 800080c:	eb04 0903 	add.w	r9, r4, r3
 8000810:	f000 fc6a 	bl	80010e8 <_sbrk_r>
 8000814:	4581      	cmp	r9, r0
 8000816:	d142      	bne.n	800089e <_malloc_r+0xea>
 8000818:	6821      	ldr	r1, [r4, #0]
 800081a:	4630      	mov	r0, r6
 800081c:	1a6d      	subs	r5, r5, r1
 800081e:	4629      	mov	r1, r5
 8000820:	f7ff ffa6 	bl	8000770 <sbrk_aligned>
 8000824:	3001      	adds	r0, #1
 8000826:	d03a      	beq.n	800089e <_malloc_r+0xea>
 8000828:	6823      	ldr	r3, [r4, #0]
 800082a:	442b      	add	r3, r5
 800082c:	6023      	str	r3, [r4, #0]
 800082e:	f8d8 3000 	ldr.w	r3, [r8]
 8000832:	685a      	ldr	r2, [r3, #4]
 8000834:	bb62      	cbnz	r2, 8000890 <_malloc_r+0xdc>
 8000836:	f8c8 7000 	str.w	r7, [r8]
 800083a:	e00f      	b.n	800085c <_malloc_r+0xa8>
 800083c:	6822      	ldr	r2, [r4, #0]
 800083e:	1b52      	subs	r2, r2, r5
 8000840:	d420      	bmi.n	8000884 <_malloc_r+0xd0>
 8000842:	2a0b      	cmp	r2, #11
 8000844:	d917      	bls.n	8000876 <_malloc_r+0xc2>
 8000846:	1961      	adds	r1, r4, r5
 8000848:	42a3      	cmp	r3, r4
 800084a:	6025      	str	r5, [r4, #0]
 800084c:	bf18      	it	ne
 800084e:	6059      	strne	r1, [r3, #4]
 8000850:	6863      	ldr	r3, [r4, #4]
 8000852:	bf08      	it	eq
 8000854:	f8c8 1000 	streq.w	r1, [r8]
 8000858:	5162      	str	r2, [r4, r5]
 800085a:	604b      	str	r3, [r1, #4]
 800085c:	4630      	mov	r0, r6
 800085e:	f000 f82f 	bl	80008c0 <__malloc_unlock>
 8000862:	f104 000b 	add.w	r0, r4, #11
 8000866:	1d23      	adds	r3, r4, #4
 8000868:	f020 0007 	bic.w	r0, r0, #7
 800086c:	1ac2      	subs	r2, r0, r3
 800086e:	bf1c      	itt	ne
 8000870:	1a1b      	subne	r3, r3, r0
 8000872:	50a3      	strne	r3, [r4, r2]
 8000874:	e7af      	b.n	80007d6 <_malloc_r+0x22>
 8000876:	6862      	ldr	r2, [r4, #4]
 8000878:	42a3      	cmp	r3, r4
 800087a:	bf0c      	ite	eq
 800087c:	f8c8 2000 	streq.w	r2, [r8]
 8000880:	605a      	strne	r2, [r3, #4]
 8000882:	e7eb      	b.n	800085c <_malloc_r+0xa8>
 8000884:	4623      	mov	r3, r4
 8000886:	6864      	ldr	r4, [r4, #4]
 8000888:	e7ae      	b.n	80007e8 <_malloc_r+0x34>
 800088a:	463c      	mov	r4, r7
 800088c:	687f      	ldr	r7, [r7, #4]
 800088e:	e7b6      	b.n	80007fe <_malloc_r+0x4a>
 8000890:	461a      	mov	r2, r3
 8000892:	685b      	ldr	r3, [r3, #4]
 8000894:	42a3      	cmp	r3, r4
 8000896:	d1fb      	bne.n	8000890 <_malloc_r+0xdc>
 8000898:	2300      	movs	r3, #0
 800089a:	6053      	str	r3, [r2, #4]
 800089c:	e7de      	b.n	800085c <_malloc_r+0xa8>
 800089e:	230c      	movs	r3, #12
 80008a0:	4630      	mov	r0, r6
 80008a2:	6033      	str	r3, [r6, #0]
 80008a4:	f000 f80c 	bl	80008c0 <__malloc_unlock>
 80008a8:	e794      	b.n	80007d4 <_malloc_r+0x20>
 80008aa:	6005      	str	r5, [r0, #0]
 80008ac:	e7d6      	b.n	800085c <_malloc_r+0xa8>
 80008ae:	bf00      	nop
 80008b0:	200001c4 	.word	0x200001c4

080008b4 <__malloc_lock>:
 80008b4:	4801      	ldr	r0, [pc, #4]	@ (80008bc <__malloc_lock+0x8>)
 80008b6:	f7ff bf10 	b.w	80006da <__retarget_lock_acquire_recursive>
 80008ba:	bf00      	nop
 80008bc:	200001bc 	.word	0x200001bc

080008c0 <__malloc_unlock>:
 80008c0:	4801      	ldr	r0, [pc, #4]	@ (80008c8 <__malloc_unlock+0x8>)
 80008c2:	f7ff bf0b 	b.w	80006dc <__retarget_lock_release_recursive>
 80008c6:	bf00      	nop
 80008c8:	200001bc 	.word	0x200001bc

080008cc <__sfputc_r>:
 80008cc:	6893      	ldr	r3, [r2, #8]
 80008ce:	b410      	push	{r4}
 80008d0:	3b01      	subs	r3, #1
 80008d2:	2b00      	cmp	r3, #0
 80008d4:	6093      	str	r3, [r2, #8]
 80008d6:	da07      	bge.n	80008e8 <__sfputc_r+0x1c>
 80008d8:	6994      	ldr	r4, [r2, #24]
 80008da:	42a3      	cmp	r3, r4
 80008dc:	db01      	blt.n	80008e2 <__sfputc_r+0x16>
 80008de:	290a      	cmp	r1, #10
 80008e0:	d102      	bne.n	80008e8 <__sfputc_r+0x1c>
 80008e2:	bc10      	pop	{r4}
 80008e4:	f000 bb6c 	b.w	8000fc0 <__swbuf_r>
 80008e8:	6813      	ldr	r3, [r2, #0]
 80008ea:	1c58      	adds	r0, r3, #1
 80008ec:	6010      	str	r0, [r2, #0]
 80008ee:	7019      	strb	r1, [r3, #0]
 80008f0:	4608      	mov	r0, r1
 80008f2:	bc10      	pop	{r4}
 80008f4:	4770      	bx	lr

080008f6 <__sfputs_r>:
 80008f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f8:	4606      	mov	r6, r0
 80008fa:	460f      	mov	r7, r1
 80008fc:	4614      	mov	r4, r2
 80008fe:	18d5      	adds	r5, r2, r3
 8000900:	42ac      	cmp	r4, r5
 8000902:	d101      	bne.n	8000908 <__sfputs_r+0x12>
 8000904:	2000      	movs	r0, #0
 8000906:	e007      	b.n	8000918 <__sfputs_r+0x22>
 8000908:	463a      	mov	r2, r7
 800090a:	4630      	mov	r0, r6
 800090c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000910:	f7ff ffdc 	bl	80008cc <__sfputc_r>
 8000914:	1c43      	adds	r3, r0, #1
 8000916:	d1f3      	bne.n	8000900 <__sfputs_r+0xa>
 8000918:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800091c <_vfiprintf_r>:
 800091c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000920:	460d      	mov	r5, r1
 8000922:	4614      	mov	r4, r2
 8000924:	4698      	mov	r8, r3
 8000926:	4606      	mov	r6, r0
 8000928:	b09d      	sub	sp, #116	@ 0x74
 800092a:	b118      	cbz	r0, 8000934 <_vfiprintf_r+0x18>
 800092c:	6a03      	ldr	r3, [r0, #32]
 800092e:	b90b      	cbnz	r3, 8000934 <_vfiprintf_r+0x18>
 8000930:	f7ff fdce 	bl	80004d0 <__sinit>
 8000934:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000936:	07d9      	lsls	r1, r3, #31
 8000938:	d405      	bmi.n	8000946 <_vfiprintf_r+0x2a>
 800093a:	89ab      	ldrh	r3, [r5, #12]
 800093c:	059a      	lsls	r2, r3, #22
 800093e:	d402      	bmi.n	8000946 <_vfiprintf_r+0x2a>
 8000940:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000942:	f7ff feca 	bl	80006da <__retarget_lock_acquire_recursive>
 8000946:	89ab      	ldrh	r3, [r5, #12]
 8000948:	071b      	lsls	r3, r3, #28
 800094a:	d501      	bpl.n	8000950 <_vfiprintf_r+0x34>
 800094c:	692b      	ldr	r3, [r5, #16]
 800094e:	b99b      	cbnz	r3, 8000978 <_vfiprintf_r+0x5c>
 8000950:	4629      	mov	r1, r5
 8000952:	4630      	mov	r0, r6
 8000954:	f000 fb72 	bl	800103c <__swsetup_r>
 8000958:	b170      	cbz	r0, 8000978 <_vfiprintf_r+0x5c>
 800095a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800095c:	07dc      	lsls	r4, r3, #31
 800095e:	d504      	bpl.n	800096a <_vfiprintf_r+0x4e>
 8000960:	f04f 30ff 	mov.w	r0, #4294967295
 8000964:	b01d      	add	sp, #116	@ 0x74
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	89ab      	ldrh	r3, [r5, #12]
 800096c:	0598      	lsls	r0, r3, #22
 800096e:	d4f7      	bmi.n	8000960 <_vfiprintf_r+0x44>
 8000970:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000972:	f7ff feb3 	bl	80006dc <__retarget_lock_release_recursive>
 8000976:	e7f3      	b.n	8000960 <_vfiprintf_r+0x44>
 8000978:	2300      	movs	r3, #0
 800097a:	9309      	str	r3, [sp, #36]	@ 0x24
 800097c:	2320      	movs	r3, #32
 800097e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000982:	2330      	movs	r3, #48	@ 0x30
 8000984:	f04f 0901 	mov.w	r9, #1
 8000988:	f8cd 800c 	str.w	r8, [sp, #12]
 800098c:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 8000b38 <_vfiprintf_r+0x21c>
 8000990:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000994:	4623      	mov	r3, r4
 8000996:	469a      	mov	sl, r3
 8000998:	f813 2b01 	ldrb.w	r2, [r3], #1
 800099c:	b10a      	cbz	r2, 80009a2 <_vfiprintf_r+0x86>
 800099e:	2a25      	cmp	r2, #37	@ 0x25
 80009a0:	d1f9      	bne.n	8000996 <_vfiprintf_r+0x7a>
 80009a2:	ebba 0b04 	subs.w	fp, sl, r4
 80009a6:	d00b      	beq.n	80009c0 <_vfiprintf_r+0xa4>
 80009a8:	465b      	mov	r3, fp
 80009aa:	4622      	mov	r2, r4
 80009ac:	4629      	mov	r1, r5
 80009ae:	4630      	mov	r0, r6
 80009b0:	f7ff ffa1 	bl	80008f6 <__sfputs_r>
 80009b4:	3001      	adds	r0, #1
 80009b6:	f000 80a7 	beq.w	8000b08 <_vfiprintf_r+0x1ec>
 80009ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80009bc:	445a      	add	r2, fp
 80009be:	9209      	str	r2, [sp, #36]	@ 0x24
 80009c0:	f89a 3000 	ldrb.w	r3, [sl]
 80009c4:	2b00      	cmp	r3, #0
 80009c6:	f000 809f 	beq.w	8000b08 <_vfiprintf_r+0x1ec>
 80009ca:	2300      	movs	r3, #0
 80009cc:	f04f 32ff 	mov.w	r2, #4294967295
 80009d0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80009d4:	f10a 0a01 	add.w	sl, sl, #1
 80009d8:	9304      	str	r3, [sp, #16]
 80009da:	9307      	str	r3, [sp, #28]
 80009dc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80009e0:	931a      	str	r3, [sp, #104]	@ 0x68
 80009e2:	4654      	mov	r4, sl
 80009e4:	2205      	movs	r2, #5
 80009e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009ea:	4853      	ldr	r0, [pc, #332]	@ (8000b38 <_vfiprintf_r+0x21c>)
 80009ec:	f000 fb8c 	bl	8001108 <memchr>
 80009f0:	9a04      	ldr	r2, [sp, #16]
 80009f2:	b9d8      	cbnz	r0, 8000a2c <_vfiprintf_r+0x110>
 80009f4:	06d1      	lsls	r1, r2, #27
 80009f6:	bf44      	itt	mi
 80009f8:	2320      	movmi	r3, #32
 80009fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80009fe:	0713      	lsls	r3, r2, #28
 8000a00:	bf44      	itt	mi
 8000a02:	232b      	movmi	r3, #43	@ 0x2b
 8000a04:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000a08:	f89a 3000 	ldrb.w	r3, [sl]
 8000a0c:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a0e:	d015      	beq.n	8000a3c <_vfiprintf_r+0x120>
 8000a10:	4654      	mov	r4, sl
 8000a12:	2000      	movs	r0, #0
 8000a14:	f04f 0c0a 	mov.w	ip, #10
 8000a18:	9a07      	ldr	r2, [sp, #28]
 8000a1a:	4621      	mov	r1, r4
 8000a1c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a20:	3b30      	subs	r3, #48	@ 0x30
 8000a22:	2b09      	cmp	r3, #9
 8000a24:	d94b      	bls.n	8000abe <_vfiprintf_r+0x1a2>
 8000a26:	b1b0      	cbz	r0, 8000a56 <_vfiprintf_r+0x13a>
 8000a28:	9207      	str	r2, [sp, #28]
 8000a2a:	e014      	b.n	8000a56 <_vfiprintf_r+0x13a>
 8000a2c:	eba0 0308 	sub.w	r3, r0, r8
 8000a30:	fa09 f303 	lsl.w	r3, r9, r3
 8000a34:	4313      	orrs	r3, r2
 8000a36:	46a2      	mov	sl, r4
 8000a38:	9304      	str	r3, [sp, #16]
 8000a3a:	e7d2      	b.n	80009e2 <_vfiprintf_r+0xc6>
 8000a3c:	9b03      	ldr	r3, [sp, #12]
 8000a3e:	1d19      	adds	r1, r3, #4
 8000a40:	681b      	ldr	r3, [r3, #0]
 8000a42:	9103      	str	r1, [sp, #12]
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	bfbb      	ittet	lt
 8000a48:	425b      	neglt	r3, r3
 8000a4a:	f042 0202 	orrlt.w	r2, r2, #2
 8000a4e:	9307      	strge	r3, [sp, #28]
 8000a50:	9307      	strlt	r3, [sp, #28]
 8000a52:	bfb8      	it	lt
 8000a54:	9204      	strlt	r2, [sp, #16]
 8000a56:	7823      	ldrb	r3, [r4, #0]
 8000a58:	2b2e      	cmp	r3, #46	@ 0x2e
 8000a5a:	d10a      	bne.n	8000a72 <_vfiprintf_r+0x156>
 8000a5c:	7863      	ldrb	r3, [r4, #1]
 8000a5e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000a60:	d132      	bne.n	8000ac8 <_vfiprintf_r+0x1ac>
 8000a62:	9b03      	ldr	r3, [sp, #12]
 8000a64:	3402      	adds	r4, #2
 8000a66:	1d1a      	adds	r2, r3, #4
 8000a68:	681b      	ldr	r3, [r3, #0]
 8000a6a:	9203      	str	r2, [sp, #12]
 8000a6c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000a70:	9305      	str	r3, [sp, #20]
 8000a72:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 8000b3c <_vfiprintf_r+0x220>
 8000a76:	2203      	movs	r2, #3
 8000a78:	4650      	mov	r0, sl
 8000a7a:	7821      	ldrb	r1, [r4, #0]
 8000a7c:	f000 fb44 	bl	8001108 <memchr>
 8000a80:	b138      	cbz	r0, 8000a92 <_vfiprintf_r+0x176>
 8000a82:	2240      	movs	r2, #64	@ 0x40
 8000a84:	9b04      	ldr	r3, [sp, #16]
 8000a86:	eba0 000a 	sub.w	r0, r0, sl
 8000a8a:	4082      	lsls	r2, r0
 8000a8c:	4313      	orrs	r3, r2
 8000a8e:	3401      	adds	r4, #1
 8000a90:	9304      	str	r3, [sp, #16]
 8000a92:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a96:	2206      	movs	r2, #6
 8000a98:	4829      	ldr	r0, [pc, #164]	@ (8000b40 <_vfiprintf_r+0x224>)
 8000a9a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000a9e:	f000 fb33 	bl	8001108 <memchr>
 8000aa2:	2800      	cmp	r0, #0
 8000aa4:	d03f      	beq.n	8000b26 <_vfiprintf_r+0x20a>
 8000aa6:	4b27      	ldr	r3, [pc, #156]	@ (8000b44 <_vfiprintf_r+0x228>)
 8000aa8:	bb1b      	cbnz	r3, 8000af2 <_vfiprintf_r+0x1d6>
 8000aaa:	9b03      	ldr	r3, [sp, #12]
 8000aac:	3307      	adds	r3, #7
 8000aae:	f023 0307 	bic.w	r3, r3, #7
 8000ab2:	3308      	adds	r3, #8
 8000ab4:	9303      	str	r3, [sp, #12]
 8000ab6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000ab8:	443b      	add	r3, r7
 8000aba:	9309      	str	r3, [sp, #36]	@ 0x24
 8000abc:	e76a      	b.n	8000994 <_vfiprintf_r+0x78>
 8000abe:	460c      	mov	r4, r1
 8000ac0:	2001      	movs	r0, #1
 8000ac2:	fb0c 3202 	mla	r2, ip, r2, r3
 8000ac6:	e7a8      	b.n	8000a1a <_vfiprintf_r+0xfe>
 8000ac8:	2300      	movs	r3, #0
 8000aca:	f04f 0c0a 	mov.w	ip, #10
 8000ace:	4619      	mov	r1, r3
 8000ad0:	3401      	adds	r4, #1
 8000ad2:	9305      	str	r3, [sp, #20]
 8000ad4:	4620      	mov	r0, r4
 8000ad6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000ada:	3a30      	subs	r2, #48	@ 0x30
 8000adc:	2a09      	cmp	r2, #9
 8000ade:	d903      	bls.n	8000ae8 <_vfiprintf_r+0x1cc>
 8000ae0:	2b00      	cmp	r3, #0
 8000ae2:	d0c6      	beq.n	8000a72 <_vfiprintf_r+0x156>
 8000ae4:	9105      	str	r1, [sp, #20]
 8000ae6:	e7c4      	b.n	8000a72 <_vfiprintf_r+0x156>
 8000ae8:	4604      	mov	r4, r0
 8000aea:	2301      	movs	r3, #1
 8000aec:	fb0c 2101 	mla	r1, ip, r1, r2
 8000af0:	e7f0      	b.n	8000ad4 <_vfiprintf_r+0x1b8>
 8000af2:	ab03      	add	r3, sp, #12
 8000af4:	9300      	str	r3, [sp, #0]
 8000af6:	462a      	mov	r2, r5
 8000af8:	4630      	mov	r0, r6
 8000afa:	4b13      	ldr	r3, [pc, #76]	@ (8000b48 <_vfiprintf_r+0x22c>)
 8000afc:	a904      	add	r1, sp, #16
 8000afe:	f3af 8000 	nop.w
 8000b02:	4607      	mov	r7, r0
 8000b04:	1c78      	adds	r0, r7, #1
 8000b06:	d1d6      	bne.n	8000ab6 <_vfiprintf_r+0x19a>
 8000b08:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000b0a:	07d9      	lsls	r1, r3, #31
 8000b0c:	d405      	bmi.n	8000b1a <_vfiprintf_r+0x1fe>
 8000b0e:	89ab      	ldrh	r3, [r5, #12]
 8000b10:	059a      	lsls	r2, r3, #22
 8000b12:	d402      	bmi.n	8000b1a <_vfiprintf_r+0x1fe>
 8000b14:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000b16:	f7ff fde1 	bl	80006dc <__retarget_lock_release_recursive>
 8000b1a:	89ab      	ldrh	r3, [r5, #12]
 8000b1c:	065b      	lsls	r3, r3, #25
 8000b1e:	f53f af1f 	bmi.w	8000960 <_vfiprintf_r+0x44>
 8000b22:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000b24:	e71e      	b.n	8000964 <_vfiprintf_r+0x48>
 8000b26:	ab03      	add	r3, sp, #12
 8000b28:	9300      	str	r3, [sp, #0]
 8000b2a:	462a      	mov	r2, r5
 8000b2c:	4630      	mov	r0, r6
 8000b2e:	4b06      	ldr	r3, [pc, #24]	@ (8000b48 <_vfiprintf_r+0x22c>)
 8000b30:	a904      	add	r1, sp, #16
 8000b32:	f000 f87d 	bl	8000c30 <_printf_i>
 8000b36:	e7e4      	b.n	8000b02 <_vfiprintf_r+0x1e6>
 8000b38:	08001257 	.word	0x08001257
 8000b3c:	0800125d 	.word	0x0800125d
 8000b40:	08001261 	.word	0x08001261
 8000b44:	00000000 	.word	0x00000000
 8000b48:	080008f7 	.word	0x080008f7

08000b4c <_printf_common>:
 8000b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b50:	4616      	mov	r6, r2
 8000b52:	4698      	mov	r8, r3
 8000b54:	688a      	ldr	r2, [r1, #8]
 8000b56:	690b      	ldr	r3, [r1, #16]
 8000b58:	4607      	mov	r7, r0
 8000b5a:	4293      	cmp	r3, r2
 8000b5c:	bfb8      	it	lt
 8000b5e:	4613      	movlt	r3, r2
 8000b60:	6033      	str	r3, [r6, #0]
 8000b62:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000b66:	460c      	mov	r4, r1
 8000b68:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000b6c:	b10a      	cbz	r2, 8000b72 <_printf_common+0x26>
 8000b6e:	3301      	adds	r3, #1
 8000b70:	6033      	str	r3, [r6, #0]
 8000b72:	6823      	ldr	r3, [r4, #0]
 8000b74:	0699      	lsls	r1, r3, #26
 8000b76:	bf42      	ittt	mi
 8000b78:	6833      	ldrmi	r3, [r6, #0]
 8000b7a:	3302      	addmi	r3, #2
 8000b7c:	6033      	strmi	r3, [r6, #0]
 8000b7e:	6825      	ldr	r5, [r4, #0]
 8000b80:	f015 0506 	ands.w	r5, r5, #6
 8000b84:	d106      	bne.n	8000b94 <_printf_common+0x48>
 8000b86:	f104 0a19 	add.w	sl, r4, #25
 8000b8a:	68e3      	ldr	r3, [r4, #12]
 8000b8c:	6832      	ldr	r2, [r6, #0]
 8000b8e:	1a9b      	subs	r3, r3, r2
 8000b90:	42ab      	cmp	r3, r5
 8000b92:	dc2b      	bgt.n	8000bec <_printf_common+0xa0>
 8000b94:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000b98:	6822      	ldr	r2, [r4, #0]
 8000b9a:	3b00      	subs	r3, #0
 8000b9c:	bf18      	it	ne
 8000b9e:	2301      	movne	r3, #1
 8000ba0:	0692      	lsls	r2, r2, #26
 8000ba2:	d430      	bmi.n	8000c06 <_printf_common+0xba>
 8000ba4:	4641      	mov	r1, r8
 8000ba6:	4638      	mov	r0, r7
 8000ba8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000bac:	47c8      	blx	r9
 8000bae:	3001      	adds	r0, #1
 8000bb0:	d023      	beq.n	8000bfa <_printf_common+0xae>
 8000bb2:	6823      	ldr	r3, [r4, #0]
 8000bb4:	6922      	ldr	r2, [r4, #16]
 8000bb6:	f003 0306 	and.w	r3, r3, #6
 8000bba:	2b04      	cmp	r3, #4
 8000bbc:	bf14      	ite	ne
 8000bbe:	2500      	movne	r5, #0
 8000bc0:	6833      	ldreq	r3, [r6, #0]
 8000bc2:	f04f 0600 	mov.w	r6, #0
 8000bc6:	bf08      	it	eq
 8000bc8:	68e5      	ldreq	r5, [r4, #12]
 8000bca:	f104 041a 	add.w	r4, r4, #26
 8000bce:	bf08      	it	eq
 8000bd0:	1aed      	subeq	r5, r5, r3
 8000bd2:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000bd6:	bf08      	it	eq
 8000bd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000bdc:	4293      	cmp	r3, r2
 8000bde:	bfc4      	itt	gt
 8000be0:	1a9b      	subgt	r3, r3, r2
 8000be2:	18ed      	addgt	r5, r5, r3
 8000be4:	42b5      	cmp	r5, r6
 8000be6:	d11a      	bne.n	8000c1e <_printf_common+0xd2>
 8000be8:	2000      	movs	r0, #0
 8000bea:	e008      	b.n	8000bfe <_printf_common+0xb2>
 8000bec:	2301      	movs	r3, #1
 8000bee:	4652      	mov	r2, sl
 8000bf0:	4641      	mov	r1, r8
 8000bf2:	4638      	mov	r0, r7
 8000bf4:	47c8      	blx	r9
 8000bf6:	3001      	adds	r0, #1
 8000bf8:	d103      	bne.n	8000c02 <_printf_common+0xb6>
 8000bfa:	f04f 30ff 	mov.w	r0, #4294967295
 8000bfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c02:	3501      	adds	r5, #1
 8000c04:	e7c1      	b.n	8000b8a <_printf_common+0x3e>
 8000c06:	2030      	movs	r0, #48	@ 0x30
 8000c08:	18e1      	adds	r1, r4, r3
 8000c0a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000c0e:	1c5a      	adds	r2, r3, #1
 8000c10:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000c14:	4422      	add	r2, r4
 8000c16:	3302      	adds	r3, #2
 8000c18:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000c1c:	e7c2      	b.n	8000ba4 <_printf_common+0x58>
 8000c1e:	2301      	movs	r3, #1
 8000c20:	4622      	mov	r2, r4
 8000c22:	4641      	mov	r1, r8
 8000c24:	4638      	mov	r0, r7
 8000c26:	47c8      	blx	r9
 8000c28:	3001      	adds	r0, #1
 8000c2a:	d0e6      	beq.n	8000bfa <_printf_common+0xae>
 8000c2c:	3601      	adds	r6, #1
 8000c2e:	e7d9      	b.n	8000be4 <_printf_common+0x98>

08000c30 <_printf_i>:
 8000c30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c34:	7e0f      	ldrb	r7, [r1, #24]
 8000c36:	4691      	mov	r9, r2
 8000c38:	2f78      	cmp	r7, #120	@ 0x78
 8000c3a:	4680      	mov	r8, r0
 8000c3c:	460c      	mov	r4, r1
 8000c3e:	469a      	mov	sl, r3
 8000c40:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000c42:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000c46:	d807      	bhi.n	8000c58 <_printf_i+0x28>
 8000c48:	2f62      	cmp	r7, #98	@ 0x62
 8000c4a:	d80a      	bhi.n	8000c62 <_printf_i+0x32>
 8000c4c:	2f00      	cmp	r7, #0
 8000c4e:	f000 80d3 	beq.w	8000df8 <_printf_i+0x1c8>
 8000c52:	2f58      	cmp	r7, #88	@ 0x58
 8000c54:	f000 80ba 	beq.w	8000dcc <_printf_i+0x19c>
 8000c58:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000c5c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000c60:	e03a      	b.n	8000cd8 <_printf_i+0xa8>
 8000c62:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000c66:	2b15      	cmp	r3, #21
 8000c68:	d8f6      	bhi.n	8000c58 <_printf_i+0x28>
 8000c6a:	a101      	add	r1, pc, #4	@ (adr r1, 8000c70 <_printf_i+0x40>)
 8000c6c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000c70:	08000cc9 	.word	0x08000cc9
 8000c74:	08000cdd 	.word	0x08000cdd
 8000c78:	08000c59 	.word	0x08000c59
 8000c7c:	08000c59 	.word	0x08000c59
 8000c80:	08000c59 	.word	0x08000c59
 8000c84:	08000c59 	.word	0x08000c59
 8000c88:	08000cdd 	.word	0x08000cdd
 8000c8c:	08000c59 	.word	0x08000c59
 8000c90:	08000c59 	.word	0x08000c59
 8000c94:	08000c59 	.word	0x08000c59
 8000c98:	08000c59 	.word	0x08000c59
 8000c9c:	08000ddf 	.word	0x08000ddf
 8000ca0:	08000d07 	.word	0x08000d07
 8000ca4:	08000d99 	.word	0x08000d99
 8000ca8:	08000c59 	.word	0x08000c59
 8000cac:	08000c59 	.word	0x08000c59
 8000cb0:	08000e01 	.word	0x08000e01
 8000cb4:	08000c59 	.word	0x08000c59
 8000cb8:	08000d07 	.word	0x08000d07
 8000cbc:	08000c59 	.word	0x08000c59
 8000cc0:	08000c59 	.word	0x08000c59
 8000cc4:	08000da1 	.word	0x08000da1
 8000cc8:	6833      	ldr	r3, [r6, #0]
 8000cca:	1d1a      	adds	r2, r3, #4
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	6032      	str	r2, [r6, #0]
 8000cd0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000cd4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000cd8:	2301      	movs	r3, #1
 8000cda:	e09e      	b.n	8000e1a <_printf_i+0x1ea>
 8000cdc:	6833      	ldr	r3, [r6, #0]
 8000cde:	6820      	ldr	r0, [r4, #0]
 8000ce0:	1d19      	adds	r1, r3, #4
 8000ce2:	6031      	str	r1, [r6, #0]
 8000ce4:	0606      	lsls	r6, r0, #24
 8000ce6:	d501      	bpl.n	8000cec <_printf_i+0xbc>
 8000ce8:	681d      	ldr	r5, [r3, #0]
 8000cea:	e003      	b.n	8000cf4 <_printf_i+0xc4>
 8000cec:	0645      	lsls	r5, r0, #25
 8000cee:	d5fb      	bpl.n	8000ce8 <_printf_i+0xb8>
 8000cf0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000cf4:	2d00      	cmp	r5, #0
 8000cf6:	da03      	bge.n	8000d00 <_printf_i+0xd0>
 8000cf8:	232d      	movs	r3, #45	@ 0x2d
 8000cfa:	426d      	negs	r5, r5
 8000cfc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000d00:	230a      	movs	r3, #10
 8000d02:	4859      	ldr	r0, [pc, #356]	@ (8000e68 <_printf_i+0x238>)
 8000d04:	e011      	b.n	8000d2a <_printf_i+0xfa>
 8000d06:	6821      	ldr	r1, [r4, #0]
 8000d08:	6833      	ldr	r3, [r6, #0]
 8000d0a:	0608      	lsls	r0, r1, #24
 8000d0c:	f853 5b04 	ldr.w	r5, [r3], #4
 8000d10:	d402      	bmi.n	8000d18 <_printf_i+0xe8>
 8000d12:	0649      	lsls	r1, r1, #25
 8000d14:	bf48      	it	mi
 8000d16:	b2ad      	uxthmi	r5, r5
 8000d18:	2f6f      	cmp	r7, #111	@ 0x6f
 8000d1a:	6033      	str	r3, [r6, #0]
 8000d1c:	bf14      	ite	ne
 8000d1e:	230a      	movne	r3, #10
 8000d20:	2308      	moveq	r3, #8
 8000d22:	4851      	ldr	r0, [pc, #324]	@ (8000e68 <_printf_i+0x238>)
 8000d24:	2100      	movs	r1, #0
 8000d26:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000d2a:	6866      	ldr	r6, [r4, #4]
 8000d2c:	2e00      	cmp	r6, #0
 8000d2e:	bfa8      	it	ge
 8000d30:	6821      	ldrge	r1, [r4, #0]
 8000d32:	60a6      	str	r6, [r4, #8]
 8000d34:	bfa4      	itt	ge
 8000d36:	f021 0104 	bicge.w	r1, r1, #4
 8000d3a:	6021      	strge	r1, [r4, #0]
 8000d3c:	b90d      	cbnz	r5, 8000d42 <_printf_i+0x112>
 8000d3e:	2e00      	cmp	r6, #0
 8000d40:	d04b      	beq.n	8000dda <_printf_i+0x1aa>
 8000d42:	4616      	mov	r6, r2
 8000d44:	fbb5 f1f3 	udiv	r1, r5, r3
 8000d48:	fb03 5711 	mls	r7, r3, r1, r5
 8000d4c:	5dc7      	ldrb	r7, [r0, r7]
 8000d4e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000d52:	462f      	mov	r7, r5
 8000d54:	42bb      	cmp	r3, r7
 8000d56:	460d      	mov	r5, r1
 8000d58:	d9f4      	bls.n	8000d44 <_printf_i+0x114>
 8000d5a:	2b08      	cmp	r3, #8
 8000d5c:	d10b      	bne.n	8000d76 <_printf_i+0x146>
 8000d5e:	6823      	ldr	r3, [r4, #0]
 8000d60:	07df      	lsls	r7, r3, #31
 8000d62:	d508      	bpl.n	8000d76 <_printf_i+0x146>
 8000d64:	6923      	ldr	r3, [r4, #16]
 8000d66:	6861      	ldr	r1, [r4, #4]
 8000d68:	4299      	cmp	r1, r3
 8000d6a:	bfde      	ittt	le
 8000d6c:	2330      	movle	r3, #48	@ 0x30
 8000d6e:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000d72:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000d76:	1b92      	subs	r2, r2, r6
 8000d78:	6122      	str	r2, [r4, #16]
 8000d7a:	464b      	mov	r3, r9
 8000d7c:	4621      	mov	r1, r4
 8000d7e:	4640      	mov	r0, r8
 8000d80:	f8cd a000 	str.w	sl, [sp]
 8000d84:	aa03      	add	r2, sp, #12
 8000d86:	f7ff fee1 	bl	8000b4c <_printf_common>
 8000d8a:	3001      	adds	r0, #1
 8000d8c:	d14a      	bne.n	8000e24 <_printf_i+0x1f4>
 8000d8e:	f04f 30ff 	mov.w	r0, #4294967295
 8000d92:	b004      	add	sp, #16
 8000d94:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d98:	6823      	ldr	r3, [r4, #0]
 8000d9a:	f043 0320 	orr.w	r3, r3, #32
 8000d9e:	6023      	str	r3, [r4, #0]
 8000da0:	2778      	movs	r7, #120	@ 0x78
 8000da2:	4832      	ldr	r0, [pc, #200]	@ (8000e6c <_printf_i+0x23c>)
 8000da4:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000da8:	6823      	ldr	r3, [r4, #0]
 8000daa:	6831      	ldr	r1, [r6, #0]
 8000dac:	061f      	lsls	r7, r3, #24
 8000dae:	f851 5b04 	ldr.w	r5, [r1], #4
 8000db2:	d402      	bmi.n	8000dba <_printf_i+0x18a>
 8000db4:	065f      	lsls	r7, r3, #25
 8000db6:	bf48      	it	mi
 8000db8:	b2ad      	uxthmi	r5, r5
 8000dba:	6031      	str	r1, [r6, #0]
 8000dbc:	07d9      	lsls	r1, r3, #31
 8000dbe:	bf44      	itt	mi
 8000dc0:	f043 0320 	orrmi.w	r3, r3, #32
 8000dc4:	6023      	strmi	r3, [r4, #0]
 8000dc6:	b11d      	cbz	r5, 8000dd0 <_printf_i+0x1a0>
 8000dc8:	2310      	movs	r3, #16
 8000dca:	e7ab      	b.n	8000d24 <_printf_i+0xf4>
 8000dcc:	4826      	ldr	r0, [pc, #152]	@ (8000e68 <_printf_i+0x238>)
 8000dce:	e7e9      	b.n	8000da4 <_printf_i+0x174>
 8000dd0:	6823      	ldr	r3, [r4, #0]
 8000dd2:	f023 0320 	bic.w	r3, r3, #32
 8000dd6:	6023      	str	r3, [r4, #0]
 8000dd8:	e7f6      	b.n	8000dc8 <_printf_i+0x198>
 8000dda:	4616      	mov	r6, r2
 8000ddc:	e7bd      	b.n	8000d5a <_printf_i+0x12a>
 8000dde:	6833      	ldr	r3, [r6, #0]
 8000de0:	6825      	ldr	r5, [r4, #0]
 8000de2:	1d18      	adds	r0, r3, #4
 8000de4:	6961      	ldr	r1, [r4, #20]
 8000de6:	6030      	str	r0, [r6, #0]
 8000de8:	062e      	lsls	r6, r5, #24
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	d501      	bpl.n	8000df2 <_printf_i+0x1c2>
 8000dee:	6019      	str	r1, [r3, #0]
 8000df0:	e002      	b.n	8000df8 <_printf_i+0x1c8>
 8000df2:	0668      	lsls	r0, r5, #25
 8000df4:	d5fb      	bpl.n	8000dee <_printf_i+0x1be>
 8000df6:	8019      	strh	r1, [r3, #0]
 8000df8:	2300      	movs	r3, #0
 8000dfa:	4616      	mov	r6, r2
 8000dfc:	6123      	str	r3, [r4, #16]
 8000dfe:	e7bc      	b.n	8000d7a <_printf_i+0x14a>
 8000e00:	6833      	ldr	r3, [r6, #0]
 8000e02:	2100      	movs	r1, #0
 8000e04:	1d1a      	adds	r2, r3, #4
 8000e06:	6032      	str	r2, [r6, #0]
 8000e08:	681e      	ldr	r6, [r3, #0]
 8000e0a:	6862      	ldr	r2, [r4, #4]
 8000e0c:	4630      	mov	r0, r6
 8000e0e:	f000 f97b 	bl	8001108 <memchr>
 8000e12:	b108      	cbz	r0, 8000e18 <_printf_i+0x1e8>
 8000e14:	1b80      	subs	r0, r0, r6
 8000e16:	6060      	str	r0, [r4, #4]
 8000e18:	6863      	ldr	r3, [r4, #4]
 8000e1a:	6123      	str	r3, [r4, #16]
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e22:	e7aa      	b.n	8000d7a <_printf_i+0x14a>
 8000e24:	4632      	mov	r2, r6
 8000e26:	4649      	mov	r1, r9
 8000e28:	4640      	mov	r0, r8
 8000e2a:	6923      	ldr	r3, [r4, #16]
 8000e2c:	47d0      	blx	sl
 8000e2e:	3001      	adds	r0, #1
 8000e30:	d0ad      	beq.n	8000d8e <_printf_i+0x15e>
 8000e32:	6823      	ldr	r3, [r4, #0]
 8000e34:	079b      	lsls	r3, r3, #30
 8000e36:	d413      	bmi.n	8000e60 <_printf_i+0x230>
 8000e38:	68e0      	ldr	r0, [r4, #12]
 8000e3a:	9b03      	ldr	r3, [sp, #12]
 8000e3c:	4298      	cmp	r0, r3
 8000e3e:	bfb8      	it	lt
 8000e40:	4618      	movlt	r0, r3
 8000e42:	e7a6      	b.n	8000d92 <_printf_i+0x162>
 8000e44:	2301      	movs	r3, #1
 8000e46:	4632      	mov	r2, r6
 8000e48:	4649      	mov	r1, r9
 8000e4a:	4640      	mov	r0, r8
 8000e4c:	47d0      	blx	sl
 8000e4e:	3001      	adds	r0, #1
 8000e50:	d09d      	beq.n	8000d8e <_printf_i+0x15e>
 8000e52:	3501      	adds	r5, #1
 8000e54:	68e3      	ldr	r3, [r4, #12]
 8000e56:	9903      	ldr	r1, [sp, #12]
 8000e58:	1a5b      	subs	r3, r3, r1
 8000e5a:	42ab      	cmp	r3, r5
 8000e5c:	dcf2      	bgt.n	8000e44 <_printf_i+0x214>
 8000e5e:	e7eb      	b.n	8000e38 <_printf_i+0x208>
 8000e60:	2500      	movs	r5, #0
 8000e62:	f104 0619 	add.w	r6, r4, #25
 8000e66:	e7f5      	b.n	8000e54 <_printf_i+0x224>
 8000e68:	08001268 	.word	0x08001268
 8000e6c:	08001279 	.word	0x08001279

08000e70 <__sflush_r>:
 8000e70:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000e74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e76:	0716      	lsls	r6, r2, #28
 8000e78:	4605      	mov	r5, r0
 8000e7a:	460c      	mov	r4, r1
 8000e7c:	d454      	bmi.n	8000f28 <__sflush_r+0xb8>
 8000e7e:	684b      	ldr	r3, [r1, #4]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	dc02      	bgt.n	8000e8a <__sflush_r+0x1a>
 8000e84:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000e86:	2b00      	cmp	r3, #0
 8000e88:	dd48      	ble.n	8000f1c <__sflush_r+0xac>
 8000e8a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000e8c:	2e00      	cmp	r6, #0
 8000e8e:	d045      	beq.n	8000f1c <__sflush_r+0xac>
 8000e90:	2300      	movs	r3, #0
 8000e92:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000e96:	682f      	ldr	r7, [r5, #0]
 8000e98:	6a21      	ldr	r1, [r4, #32]
 8000e9a:	602b      	str	r3, [r5, #0]
 8000e9c:	d030      	beq.n	8000f00 <__sflush_r+0x90>
 8000e9e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000ea0:	89a3      	ldrh	r3, [r4, #12]
 8000ea2:	0759      	lsls	r1, r3, #29
 8000ea4:	d505      	bpl.n	8000eb2 <__sflush_r+0x42>
 8000ea6:	6863      	ldr	r3, [r4, #4]
 8000ea8:	1ad2      	subs	r2, r2, r3
 8000eaa:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000eac:	b10b      	cbz	r3, 8000eb2 <__sflush_r+0x42>
 8000eae:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000eb0:	1ad2      	subs	r2, r2, r3
 8000eb2:	2300      	movs	r3, #0
 8000eb4:	4628      	mov	r0, r5
 8000eb6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000eb8:	6a21      	ldr	r1, [r4, #32]
 8000eba:	47b0      	blx	r6
 8000ebc:	1c43      	adds	r3, r0, #1
 8000ebe:	89a3      	ldrh	r3, [r4, #12]
 8000ec0:	d106      	bne.n	8000ed0 <__sflush_r+0x60>
 8000ec2:	6829      	ldr	r1, [r5, #0]
 8000ec4:	291d      	cmp	r1, #29
 8000ec6:	d82b      	bhi.n	8000f20 <__sflush_r+0xb0>
 8000ec8:	4a28      	ldr	r2, [pc, #160]	@ (8000f6c <__sflush_r+0xfc>)
 8000eca:	410a      	asrs	r2, r1
 8000ecc:	07d6      	lsls	r6, r2, #31
 8000ece:	d427      	bmi.n	8000f20 <__sflush_r+0xb0>
 8000ed0:	2200      	movs	r2, #0
 8000ed2:	6062      	str	r2, [r4, #4]
 8000ed4:	6922      	ldr	r2, [r4, #16]
 8000ed6:	04d9      	lsls	r1, r3, #19
 8000ed8:	6022      	str	r2, [r4, #0]
 8000eda:	d504      	bpl.n	8000ee6 <__sflush_r+0x76>
 8000edc:	1c42      	adds	r2, r0, #1
 8000ede:	d101      	bne.n	8000ee4 <__sflush_r+0x74>
 8000ee0:	682b      	ldr	r3, [r5, #0]
 8000ee2:	b903      	cbnz	r3, 8000ee6 <__sflush_r+0x76>
 8000ee4:	6560      	str	r0, [r4, #84]	@ 0x54
 8000ee6:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000ee8:	602f      	str	r7, [r5, #0]
 8000eea:	b1b9      	cbz	r1, 8000f1c <__sflush_r+0xac>
 8000eec:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000ef0:	4299      	cmp	r1, r3
 8000ef2:	d002      	beq.n	8000efa <__sflush_r+0x8a>
 8000ef4:	4628      	mov	r0, r5
 8000ef6:	f7ff fbf3 	bl	80006e0 <_free_r>
 8000efa:	2300      	movs	r3, #0
 8000efc:	6363      	str	r3, [r4, #52]	@ 0x34
 8000efe:	e00d      	b.n	8000f1c <__sflush_r+0xac>
 8000f00:	2301      	movs	r3, #1
 8000f02:	4628      	mov	r0, r5
 8000f04:	47b0      	blx	r6
 8000f06:	4602      	mov	r2, r0
 8000f08:	1c50      	adds	r0, r2, #1
 8000f0a:	d1c9      	bne.n	8000ea0 <__sflush_r+0x30>
 8000f0c:	682b      	ldr	r3, [r5, #0]
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	d0c6      	beq.n	8000ea0 <__sflush_r+0x30>
 8000f12:	2b1d      	cmp	r3, #29
 8000f14:	d001      	beq.n	8000f1a <__sflush_r+0xaa>
 8000f16:	2b16      	cmp	r3, #22
 8000f18:	d11d      	bne.n	8000f56 <__sflush_r+0xe6>
 8000f1a:	602f      	str	r7, [r5, #0]
 8000f1c:	2000      	movs	r0, #0
 8000f1e:	e021      	b.n	8000f64 <__sflush_r+0xf4>
 8000f20:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f24:	b21b      	sxth	r3, r3
 8000f26:	e01a      	b.n	8000f5e <__sflush_r+0xee>
 8000f28:	690f      	ldr	r7, [r1, #16]
 8000f2a:	2f00      	cmp	r7, #0
 8000f2c:	d0f6      	beq.n	8000f1c <__sflush_r+0xac>
 8000f2e:	0793      	lsls	r3, r2, #30
 8000f30:	bf18      	it	ne
 8000f32:	2300      	movne	r3, #0
 8000f34:	680e      	ldr	r6, [r1, #0]
 8000f36:	bf08      	it	eq
 8000f38:	694b      	ldreq	r3, [r1, #20]
 8000f3a:	1bf6      	subs	r6, r6, r7
 8000f3c:	600f      	str	r7, [r1, #0]
 8000f3e:	608b      	str	r3, [r1, #8]
 8000f40:	2e00      	cmp	r6, #0
 8000f42:	ddeb      	ble.n	8000f1c <__sflush_r+0xac>
 8000f44:	4633      	mov	r3, r6
 8000f46:	463a      	mov	r2, r7
 8000f48:	4628      	mov	r0, r5
 8000f4a:	6a21      	ldr	r1, [r4, #32]
 8000f4c:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 8000f50:	47e0      	blx	ip
 8000f52:	2800      	cmp	r0, #0
 8000f54:	dc07      	bgt.n	8000f66 <__sflush_r+0xf6>
 8000f56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f5a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f5e:	f04f 30ff 	mov.w	r0, #4294967295
 8000f62:	81a3      	strh	r3, [r4, #12]
 8000f64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000f66:	4407      	add	r7, r0
 8000f68:	1a36      	subs	r6, r6, r0
 8000f6a:	e7e9      	b.n	8000f40 <__sflush_r+0xd0>
 8000f6c:	dfbffffe 	.word	0xdfbffffe

08000f70 <_fflush_r>:
 8000f70:	b538      	push	{r3, r4, r5, lr}
 8000f72:	690b      	ldr	r3, [r1, #16]
 8000f74:	4605      	mov	r5, r0
 8000f76:	460c      	mov	r4, r1
 8000f78:	b913      	cbnz	r3, 8000f80 <_fflush_r+0x10>
 8000f7a:	2500      	movs	r5, #0
 8000f7c:	4628      	mov	r0, r5
 8000f7e:	bd38      	pop	{r3, r4, r5, pc}
 8000f80:	b118      	cbz	r0, 8000f8a <_fflush_r+0x1a>
 8000f82:	6a03      	ldr	r3, [r0, #32]
 8000f84:	b90b      	cbnz	r3, 8000f8a <_fflush_r+0x1a>
 8000f86:	f7ff faa3 	bl	80004d0 <__sinit>
 8000f8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000f8e:	2b00      	cmp	r3, #0
 8000f90:	d0f3      	beq.n	8000f7a <_fflush_r+0xa>
 8000f92:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8000f94:	07d0      	lsls	r0, r2, #31
 8000f96:	d404      	bmi.n	8000fa2 <_fflush_r+0x32>
 8000f98:	0599      	lsls	r1, r3, #22
 8000f9a:	d402      	bmi.n	8000fa2 <_fflush_r+0x32>
 8000f9c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000f9e:	f7ff fb9c 	bl	80006da <__retarget_lock_acquire_recursive>
 8000fa2:	4628      	mov	r0, r5
 8000fa4:	4621      	mov	r1, r4
 8000fa6:	f7ff ff63 	bl	8000e70 <__sflush_r>
 8000faa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000fac:	4605      	mov	r5, r0
 8000fae:	07da      	lsls	r2, r3, #31
 8000fb0:	d4e4      	bmi.n	8000f7c <_fflush_r+0xc>
 8000fb2:	89a3      	ldrh	r3, [r4, #12]
 8000fb4:	059b      	lsls	r3, r3, #22
 8000fb6:	d4e1      	bmi.n	8000f7c <_fflush_r+0xc>
 8000fb8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000fba:	f7ff fb8f 	bl	80006dc <__retarget_lock_release_recursive>
 8000fbe:	e7dd      	b.n	8000f7c <_fflush_r+0xc>

08000fc0 <__swbuf_r>:
 8000fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fc2:	460e      	mov	r6, r1
 8000fc4:	4614      	mov	r4, r2
 8000fc6:	4605      	mov	r5, r0
 8000fc8:	b118      	cbz	r0, 8000fd2 <__swbuf_r+0x12>
 8000fca:	6a03      	ldr	r3, [r0, #32]
 8000fcc:	b90b      	cbnz	r3, 8000fd2 <__swbuf_r+0x12>
 8000fce:	f7ff fa7f 	bl	80004d0 <__sinit>
 8000fd2:	69a3      	ldr	r3, [r4, #24]
 8000fd4:	60a3      	str	r3, [r4, #8]
 8000fd6:	89a3      	ldrh	r3, [r4, #12]
 8000fd8:	071a      	lsls	r2, r3, #28
 8000fda:	d501      	bpl.n	8000fe0 <__swbuf_r+0x20>
 8000fdc:	6923      	ldr	r3, [r4, #16]
 8000fde:	b943      	cbnz	r3, 8000ff2 <__swbuf_r+0x32>
 8000fe0:	4621      	mov	r1, r4
 8000fe2:	4628      	mov	r0, r5
 8000fe4:	f000 f82a 	bl	800103c <__swsetup_r>
 8000fe8:	b118      	cbz	r0, 8000ff2 <__swbuf_r+0x32>
 8000fea:	f04f 37ff 	mov.w	r7, #4294967295
 8000fee:	4638      	mov	r0, r7
 8000ff0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ff2:	6823      	ldr	r3, [r4, #0]
 8000ff4:	6922      	ldr	r2, [r4, #16]
 8000ff6:	b2f6      	uxtb	r6, r6
 8000ff8:	1a98      	subs	r0, r3, r2
 8000ffa:	6963      	ldr	r3, [r4, #20]
 8000ffc:	4637      	mov	r7, r6
 8000ffe:	4283      	cmp	r3, r0
 8001000:	dc05      	bgt.n	800100e <__swbuf_r+0x4e>
 8001002:	4621      	mov	r1, r4
 8001004:	4628      	mov	r0, r5
 8001006:	f7ff ffb3 	bl	8000f70 <_fflush_r>
 800100a:	2800      	cmp	r0, #0
 800100c:	d1ed      	bne.n	8000fea <__swbuf_r+0x2a>
 800100e:	68a3      	ldr	r3, [r4, #8]
 8001010:	3b01      	subs	r3, #1
 8001012:	60a3      	str	r3, [r4, #8]
 8001014:	6823      	ldr	r3, [r4, #0]
 8001016:	1c5a      	adds	r2, r3, #1
 8001018:	6022      	str	r2, [r4, #0]
 800101a:	701e      	strb	r6, [r3, #0]
 800101c:	6962      	ldr	r2, [r4, #20]
 800101e:	1c43      	adds	r3, r0, #1
 8001020:	429a      	cmp	r2, r3
 8001022:	d004      	beq.n	800102e <__swbuf_r+0x6e>
 8001024:	89a3      	ldrh	r3, [r4, #12]
 8001026:	07db      	lsls	r3, r3, #31
 8001028:	d5e1      	bpl.n	8000fee <__swbuf_r+0x2e>
 800102a:	2e0a      	cmp	r6, #10
 800102c:	d1df      	bne.n	8000fee <__swbuf_r+0x2e>
 800102e:	4621      	mov	r1, r4
 8001030:	4628      	mov	r0, r5
 8001032:	f7ff ff9d 	bl	8000f70 <_fflush_r>
 8001036:	2800      	cmp	r0, #0
 8001038:	d0d9      	beq.n	8000fee <__swbuf_r+0x2e>
 800103a:	e7d6      	b.n	8000fea <__swbuf_r+0x2a>

0800103c <__swsetup_r>:
 800103c:	b538      	push	{r3, r4, r5, lr}
 800103e:	4b29      	ldr	r3, [pc, #164]	@ (80010e4 <__swsetup_r+0xa8>)
 8001040:	4605      	mov	r5, r0
 8001042:	6818      	ldr	r0, [r3, #0]
 8001044:	460c      	mov	r4, r1
 8001046:	b118      	cbz	r0, 8001050 <__swsetup_r+0x14>
 8001048:	6a03      	ldr	r3, [r0, #32]
 800104a:	b90b      	cbnz	r3, 8001050 <__swsetup_r+0x14>
 800104c:	f7ff fa40 	bl	80004d0 <__sinit>
 8001050:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001054:	0719      	lsls	r1, r3, #28
 8001056:	d422      	bmi.n	800109e <__swsetup_r+0x62>
 8001058:	06da      	lsls	r2, r3, #27
 800105a:	d407      	bmi.n	800106c <__swsetup_r+0x30>
 800105c:	2209      	movs	r2, #9
 800105e:	602a      	str	r2, [r5, #0]
 8001060:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001064:	f04f 30ff 	mov.w	r0, #4294967295
 8001068:	81a3      	strh	r3, [r4, #12]
 800106a:	e033      	b.n	80010d4 <__swsetup_r+0x98>
 800106c:	0758      	lsls	r0, r3, #29
 800106e:	d512      	bpl.n	8001096 <__swsetup_r+0x5a>
 8001070:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8001072:	b141      	cbz	r1, 8001086 <__swsetup_r+0x4a>
 8001074:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001078:	4299      	cmp	r1, r3
 800107a:	d002      	beq.n	8001082 <__swsetup_r+0x46>
 800107c:	4628      	mov	r0, r5
 800107e:	f7ff fb2f 	bl	80006e0 <_free_r>
 8001082:	2300      	movs	r3, #0
 8001084:	6363      	str	r3, [r4, #52]	@ 0x34
 8001086:	89a3      	ldrh	r3, [r4, #12]
 8001088:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800108c:	81a3      	strh	r3, [r4, #12]
 800108e:	2300      	movs	r3, #0
 8001090:	6063      	str	r3, [r4, #4]
 8001092:	6923      	ldr	r3, [r4, #16]
 8001094:	6023      	str	r3, [r4, #0]
 8001096:	89a3      	ldrh	r3, [r4, #12]
 8001098:	f043 0308 	orr.w	r3, r3, #8
 800109c:	81a3      	strh	r3, [r4, #12]
 800109e:	6923      	ldr	r3, [r4, #16]
 80010a0:	b94b      	cbnz	r3, 80010b6 <__swsetup_r+0x7a>
 80010a2:	89a3      	ldrh	r3, [r4, #12]
 80010a4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80010a8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80010ac:	d003      	beq.n	80010b6 <__swsetup_r+0x7a>
 80010ae:	4621      	mov	r1, r4
 80010b0:	4628      	mov	r0, r5
 80010b2:	f000 f85c 	bl	800116e <__smakebuf_r>
 80010b6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010ba:	f013 0201 	ands.w	r2, r3, #1
 80010be:	d00a      	beq.n	80010d6 <__swsetup_r+0x9a>
 80010c0:	2200      	movs	r2, #0
 80010c2:	60a2      	str	r2, [r4, #8]
 80010c4:	6962      	ldr	r2, [r4, #20]
 80010c6:	4252      	negs	r2, r2
 80010c8:	61a2      	str	r2, [r4, #24]
 80010ca:	6922      	ldr	r2, [r4, #16]
 80010cc:	b942      	cbnz	r2, 80010e0 <__swsetup_r+0xa4>
 80010ce:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80010d2:	d1c5      	bne.n	8001060 <__swsetup_r+0x24>
 80010d4:	bd38      	pop	{r3, r4, r5, pc}
 80010d6:	0799      	lsls	r1, r3, #30
 80010d8:	bf58      	it	pl
 80010da:	6962      	ldrpl	r2, [r4, #20]
 80010dc:	60a2      	str	r2, [r4, #8]
 80010de:	e7f4      	b.n	80010ca <__swsetup_r+0x8e>
 80010e0:	2000      	movs	r0, #0
 80010e2:	e7f7      	b.n	80010d4 <__swsetup_r+0x98>
 80010e4:	2000000c 	.word	0x2000000c

080010e8 <_sbrk_r>:
 80010e8:	b538      	push	{r3, r4, r5, lr}
 80010ea:	2300      	movs	r3, #0
 80010ec:	4d05      	ldr	r5, [pc, #20]	@ (8001104 <_sbrk_r+0x1c>)
 80010ee:	4604      	mov	r4, r0
 80010f0:	4608      	mov	r0, r1
 80010f2:	602b      	str	r3, [r5, #0]
 80010f4:	f7ff f900 	bl	80002f8 <_sbrk>
 80010f8:	1c43      	adds	r3, r0, #1
 80010fa:	d102      	bne.n	8001102 <_sbrk_r+0x1a>
 80010fc:	682b      	ldr	r3, [r5, #0]
 80010fe:	b103      	cbz	r3, 8001102 <_sbrk_r+0x1a>
 8001100:	6023      	str	r3, [r4, #0]
 8001102:	bd38      	pop	{r3, r4, r5, pc}
 8001104:	200001b8 	.word	0x200001b8

08001108 <memchr>:
 8001108:	4603      	mov	r3, r0
 800110a:	b510      	push	{r4, lr}
 800110c:	b2c9      	uxtb	r1, r1
 800110e:	4402      	add	r2, r0
 8001110:	4293      	cmp	r3, r2
 8001112:	4618      	mov	r0, r3
 8001114:	d101      	bne.n	800111a <memchr+0x12>
 8001116:	2000      	movs	r0, #0
 8001118:	e003      	b.n	8001122 <memchr+0x1a>
 800111a:	7804      	ldrb	r4, [r0, #0]
 800111c:	3301      	adds	r3, #1
 800111e:	428c      	cmp	r4, r1
 8001120:	d1f6      	bne.n	8001110 <memchr+0x8>
 8001122:	bd10      	pop	{r4, pc}

08001124 <__swhatbuf_r>:
 8001124:	b570      	push	{r4, r5, r6, lr}
 8001126:	460c      	mov	r4, r1
 8001128:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800112c:	4615      	mov	r5, r2
 800112e:	2900      	cmp	r1, #0
 8001130:	461e      	mov	r6, r3
 8001132:	b096      	sub	sp, #88	@ 0x58
 8001134:	da0c      	bge.n	8001150 <__swhatbuf_r+0x2c>
 8001136:	89a3      	ldrh	r3, [r4, #12]
 8001138:	2100      	movs	r1, #0
 800113a:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800113e:	bf14      	ite	ne
 8001140:	2340      	movne	r3, #64	@ 0x40
 8001142:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001146:	2000      	movs	r0, #0
 8001148:	6031      	str	r1, [r6, #0]
 800114a:	602b      	str	r3, [r5, #0]
 800114c:	b016      	add	sp, #88	@ 0x58
 800114e:	bd70      	pop	{r4, r5, r6, pc}
 8001150:	466a      	mov	r2, sp
 8001152:	f000 f849 	bl	80011e8 <_fstat_r>
 8001156:	2800      	cmp	r0, #0
 8001158:	dbed      	blt.n	8001136 <__swhatbuf_r+0x12>
 800115a:	9901      	ldr	r1, [sp, #4]
 800115c:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8001160:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001164:	4259      	negs	r1, r3
 8001166:	4159      	adcs	r1, r3
 8001168:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800116c:	e7eb      	b.n	8001146 <__swhatbuf_r+0x22>

0800116e <__smakebuf_r>:
 800116e:	898b      	ldrh	r3, [r1, #12]
 8001170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001172:	079d      	lsls	r5, r3, #30
 8001174:	4606      	mov	r6, r0
 8001176:	460c      	mov	r4, r1
 8001178:	d507      	bpl.n	800118a <__smakebuf_r+0x1c>
 800117a:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800117e:	6023      	str	r3, [r4, #0]
 8001180:	6123      	str	r3, [r4, #16]
 8001182:	2301      	movs	r3, #1
 8001184:	6163      	str	r3, [r4, #20]
 8001186:	b003      	add	sp, #12
 8001188:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800118a:	466a      	mov	r2, sp
 800118c:	ab01      	add	r3, sp, #4
 800118e:	f7ff ffc9 	bl	8001124 <__swhatbuf_r>
 8001192:	9f00      	ldr	r7, [sp, #0]
 8001194:	4605      	mov	r5, r0
 8001196:	4639      	mov	r1, r7
 8001198:	4630      	mov	r0, r6
 800119a:	f7ff fb0b 	bl	80007b4 <_malloc_r>
 800119e:	b948      	cbnz	r0, 80011b4 <__smakebuf_r+0x46>
 80011a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011a4:	059a      	lsls	r2, r3, #22
 80011a6:	d4ee      	bmi.n	8001186 <__smakebuf_r+0x18>
 80011a8:	f023 0303 	bic.w	r3, r3, #3
 80011ac:	f043 0302 	orr.w	r3, r3, #2
 80011b0:	81a3      	strh	r3, [r4, #12]
 80011b2:	e7e2      	b.n	800117a <__smakebuf_r+0xc>
 80011b4:	89a3      	ldrh	r3, [r4, #12]
 80011b6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80011ba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80011be:	81a3      	strh	r3, [r4, #12]
 80011c0:	9b01      	ldr	r3, [sp, #4]
 80011c2:	6020      	str	r0, [r4, #0]
 80011c4:	b15b      	cbz	r3, 80011de <__smakebuf_r+0x70>
 80011c6:	4630      	mov	r0, r6
 80011c8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80011cc:	f000 f81e 	bl	800120c <_isatty_r>
 80011d0:	b128      	cbz	r0, 80011de <__smakebuf_r+0x70>
 80011d2:	89a3      	ldrh	r3, [r4, #12]
 80011d4:	f023 0303 	bic.w	r3, r3, #3
 80011d8:	f043 0301 	orr.w	r3, r3, #1
 80011dc:	81a3      	strh	r3, [r4, #12]
 80011de:	89a3      	ldrh	r3, [r4, #12]
 80011e0:	431d      	orrs	r5, r3
 80011e2:	81a5      	strh	r5, [r4, #12]
 80011e4:	e7cf      	b.n	8001186 <__smakebuf_r+0x18>
	...

080011e8 <_fstat_r>:
 80011e8:	b538      	push	{r3, r4, r5, lr}
 80011ea:	2300      	movs	r3, #0
 80011ec:	4d06      	ldr	r5, [pc, #24]	@ (8001208 <_fstat_r+0x20>)
 80011ee:	4604      	mov	r4, r0
 80011f0:	4608      	mov	r0, r1
 80011f2:	4611      	mov	r1, r2
 80011f4:	602b      	str	r3, [r5, #0]
 80011f6:	f7ff f859 	bl	80002ac <_fstat>
 80011fa:	1c43      	adds	r3, r0, #1
 80011fc:	d102      	bne.n	8001204 <_fstat_r+0x1c>
 80011fe:	682b      	ldr	r3, [r5, #0]
 8001200:	b103      	cbz	r3, 8001204 <_fstat_r+0x1c>
 8001202:	6023      	str	r3, [r4, #0]
 8001204:	bd38      	pop	{r3, r4, r5, pc}
 8001206:	bf00      	nop
 8001208:	200001b8 	.word	0x200001b8

0800120c <_isatty_r>:
 800120c:	b538      	push	{r3, r4, r5, lr}
 800120e:	2300      	movs	r3, #0
 8001210:	4d05      	ldr	r5, [pc, #20]	@ (8001228 <_isatty_r+0x1c>)
 8001212:	4604      	mov	r4, r0
 8001214:	4608      	mov	r0, r1
 8001216:	602b      	str	r3, [r5, #0]
 8001218:	f7ff f857 	bl	80002ca <_isatty>
 800121c:	1c43      	adds	r3, r0, #1
 800121e:	d102      	bne.n	8001226 <_isatty_r+0x1a>
 8001220:	682b      	ldr	r3, [r5, #0]
 8001222:	b103      	cbz	r3, 8001226 <_isatty_r+0x1a>
 8001224:	6023      	str	r3, [r4, #0]
 8001226:	bd38      	pop	{r3, r4, r5, pc}
 8001228:	200001b8 	.word	0x200001b8

0800122c <_init>:
 800122c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800122e:	bf00      	nop
 8001230:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001232:	bc08      	pop	{r3}
 8001234:	469e      	mov	lr, r3
 8001236:	4770      	bx	lr

08001238 <_fini>:
 8001238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800123a:	bf00      	nop
 800123c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800123e:	bc08      	pop	{r3}
 8001240:	469e      	mov	lr, r3
 8001242:	4770      	bx	lr
